#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18052
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace server
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Database1")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertemployee(employee instance);
    partial void Updateemployee(employee instance);
    partial void Deleteemployee(employee instance);
    partial void InsertstoreHouse(storeHouse instance);
    partial void UpdatestoreHouse(storeHouse instance);
    partial void DeletestoreHouse(storeHouse instance);
    partial void InserttempBillsDetail(tempBillsDetail instance);
    partial void UpdatetempBillsDetail(tempBillsDetail instance);
    partial void DeletetempBillsDetail(tempBillsDetail instance);
    partial void InserttempBill(tempBill instance);
    partial void UpdatetempBill(tempBill instance);
    partial void DeletetempBill(tempBill instance);
    partial void Insertbill(bill instance);
    partial void Updatebill(bill instance);
    partial void Deletebill(bill instance);
    partial void InsertbillDetail(billDetail instance);
    partial void UpdatebillDetail(billDetail instance);
    partial void DeletebillDetail(billDetail instance);
    partial void InsertworkType(workType instance);
    partial void UpdateworkType(workType instance);
    partial void DeleteworkType(workType instance);
    partial void InsertfoodMaterialRelation(foodMaterialRelation instance);
    partial void UpdatefoodMaterialRelation(foodMaterialRelation instance);
    partial void DeletefoodMaterialRelation(foodMaterialRelation instance);
    partial void InsertcountingUnit(countingUnit instance);
    partial void UpdatecountingUnit(countingUnit instance);
    partial void DeletecountingUnit(countingUnit instance);
    partial void InsertcashMoney(cashMoney instance);
    partial void UpdatecashMoney(cashMoney instance);
    partial void DeletecashMoney(cashMoney instance);
    partial void InserttransferType(transferType instance);
    partial void UpdatetransferType(transferType instance);
    partial void DeletetransferType(transferType instance);
    partial void InsertemployeesInOut(employeesInOut instance);
    partial void UpdateemployeesInOut(employeesInOut instance);
    partial void DeleteemployeesInOut(employeesInOut instance);
    partial void Insertsalary(salary instance);
    partial void Updatesalary(salary instance);
    partial void Deletesalary(salary instance);
    partial void Insertaccount(account instance);
    partial void Updateaccount(account instance);
    partial void Deleteaccount(account instance);
    partial void InsertfoodMaterial(foodMaterial instance);
    partial void UpdatefoodMaterial(foodMaterial instance);
    partial void DeletefoodMaterial(foodMaterial instance);
    partial void InsertprimaryMaterial(primaryMaterial instance);
    partial void UpdateprimaryMaterial(primaryMaterial instance);
    partial void DeleteprimaryMaterial(primaryMaterial instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertPermission(Permission instance);
    partial void UpdatePermission(Permission instance);
    partial void DeletePermission(Permission instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::server.Properties.Settings.Default.Database1ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<employee> employees
		{
			get
			{
				return this.GetTable<employee>();
			}
		}
		
		public System.Data.Linq.Table<getloggedin> getloggedins
		{
			get
			{
				return this.GetTable<getloggedin>();
			}
		}
		
		public System.Data.Linq.Table<getloggedout> getloggedouts
		{
			get
			{
				return this.GetTable<getloggedout>();
			}
		}
		
		public System.Data.Linq.Table<storeHouse> storeHouses
		{
			get
			{
				return this.GetTable<storeHouse>();
			}
		}
		
		public System.Data.Linq.Table<getstorematerial> getstorematerials
		{
			get
			{
				return this.GetTable<getstorematerial>();
			}
		}
		
		public System.Data.Linq.Table<getTable> getTables
		{
			get
			{
				return this.GetTable<getTable>();
			}
		}
		
		public System.Data.Linq.Table<getTableDetail> getTableDetails
		{
			get
			{
				return this.GetTable<getTableDetail>();
			}
		}
		
		public System.Data.Linq.Table<tempBillsDetail> tempBillsDetails
		{
			get
			{
				return this.GetTable<tempBillsDetail>();
			}
		}
		
		public System.Data.Linq.Table<getcaptain> getcaptains
		{
			get
			{
				return this.GetTable<getcaptain>();
			}
		}
		
		public System.Data.Linq.Table<tempBill> tempBills
		{
			get
			{
				return this.GetTable<tempBill>();
			}
		}
		
		public System.Data.Linq.Table<bill> bills
		{
			get
			{
				return this.GetTable<bill>();
			}
		}
		
		public System.Data.Linq.Table<billDetail> billDetails
		{
			get
			{
				return this.GetTable<billDetail>();
			}
		}
		
		public System.Data.Linq.Table<getbilldetail> getbilldetails
		{
			get
			{
				return this.GetTable<getbilldetail>();
			}
		}
		
		public System.Data.Linq.Table<workType> workTypes
		{
			get
			{
				return this.GetTable<workType>();
			}
		}
		
		public System.Data.Linq.Table<getKitchenFood> getKitchenFoods
		{
			get
			{
				return this.GetTable<getKitchenFood>();
			}
		}
		
		public System.Data.Linq.Table<GetPMaterial> GetPMaterials
		{
			get
			{
				return this.GetTable<GetPMaterial>();
			}
		}
		
		public System.Data.Linq.Table<GetFoodMenu> GetFoodMenus
		{
			get
			{
				return this.GetTable<GetFoodMenu>();
			}
		}
		
		public System.Data.Linq.Table<foodMaterialRelation> foodMaterialRelations
		{
			get
			{
				return this.GetTable<foodMaterialRelation>();
			}
		}
		
		public System.Data.Linq.Table<getRelation> getRelations
		{
			get
			{
				return this.GetTable<getRelation>();
			}
		}
		
		public System.Data.Linq.Table<countingUnit> countingUnits
		{
			get
			{
				return this.GetTable<countingUnit>();
			}
		}
		
		public System.Data.Linq.Table<getoldbill> getoldbills
		{
			get
			{
				return this.GetTable<getoldbill>();
			}
		}
		
		public System.Data.Linq.Table<cashMoney> cashMoneys
		{
			get
			{
				return this.GetTable<cashMoney>();
			}
		}
		
		public System.Data.Linq.Table<getCashMoney> getCashMoneys
		{
			get
			{
				return this.GetTable<getCashMoney>();
			}
		}
		
		public System.Data.Linq.Table<transferType> transferTypes
		{
			get
			{
				return this.GetTable<transferType>();
			}
		}
		
		public System.Data.Linq.Table<employeesInOut> employeesInOuts
		{
			get
			{
				return this.GetTable<employeesInOut>();
			}
		}
		
		public System.Data.Linq.Table<salary> salaries
		{
			get
			{
				return this.GetTable<salary>();
			}
		}
		
		public System.Data.Linq.Table<getSavedSalary> getSavedSalaries
		{
			get
			{
				return this.GetTable<getSavedSalary>();
			}
		}
		
		public System.Data.Linq.Table<getSalary> getSalaries
		{
			get
			{
				return this.GetTable<getSalary>();
			}
		}
		
		public System.Data.Linq.Table<account> accounts
		{
			get
			{
				return this.GetTable<account>();
			}
		}
		
		public System.Data.Linq.Table<foodMaterial> foodMaterials
		{
			get
			{
				return this.GetTable<foodMaterial>();
			}
		}
		
		public System.Data.Linq.Table<primaryMaterial> primaryMaterials
		{
			get
			{
				return this.GetTable<primaryMaterial>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<getUser> getUsers
		{
			get
			{
				return this.GetTable<getUser>();
			}
		}
		
		public System.Data.Linq.Table<Permission> Permissions
		{
			get
			{
				return this.GetTable<Permission>();
			}
		}
		
		public System.Data.Linq.Table<getPermission> getPermissions
		{
			get
			{
				return this.GetTable<getPermission>();
			}
		}
		
		public System.Data.Linq.Table<inventoryByBill> inventoryByBills
		{
			get
			{
				return this.GetTable<inventoryByBill>();
			}
		}
		
		public System.Data.Linq.Table<getTableDetail_notMinus> getTableDetail_notMinus
		{
			get
			{
				return this.GetTable<getTableDetail_notMinus>();
			}
		}
		
		public System.Data.Linq.Table<getBillToPrint> getBillToPrints
		{
			get
			{
				return this.GetTable<getBillToPrint>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.employees")]
	public partial class employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _employeeID;
		
		private int _accountID;
		
		private string _empNationalNumber;
		
		private System.Nullable<System.DateTime> _empBirthdate;
		
		private System.Nullable<System.DateTime> _employmentDate;
		
		private System.Nullable<int> _empSalary;
		
		private System.Nullable<System.DateTime> _DemissionDate;
		
		private int _workTypeID;
		
		private EntitySet<tempBill> _tempBills;
		
		private EntitySet<bill> _bills;
		
		private EntitySet<employeesInOut> _employeesInOuts;
		
		private EntitySet<salary> _salaries;
		
		private EntityRef<workType> _workType;
		
		private EntityRef<account> _account;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnemployeeIDChanging(int value);
    partial void OnemployeeIDChanged();
    partial void OnaccountIDChanging(int value);
    partial void OnaccountIDChanged();
    partial void OnempNationalNumberChanging(string value);
    partial void OnempNationalNumberChanged();
    partial void OnempBirthdateChanging(System.Nullable<System.DateTime> value);
    partial void OnempBirthdateChanged();
    partial void OnemploymentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnemploymentDateChanged();
    partial void OnempSalaryChanging(System.Nullable<int> value);
    partial void OnempSalaryChanged();
    partial void OnDemissionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDemissionDateChanged();
    partial void OnworkTypeIDChanging(int value);
    partial void OnworkTypeIDChanged();
    #endregion
		
		public employee()
		{
			this._tempBills = new EntitySet<tempBill>(new Action<tempBill>(this.attach_tempBills), new Action<tempBill>(this.detach_tempBills));
			this._bills = new EntitySet<bill>(new Action<bill>(this.attach_bills), new Action<bill>(this.detach_bills));
			this._employeesInOuts = new EntitySet<employeesInOut>(new Action<employeesInOut>(this.attach_employeesInOuts), new Action<employeesInOut>(this.detach_employeesInOuts));
			this._salaries = new EntitySet<salary>(new Action<salary>(this.attach_salaries), new Action<salary>(this.detach_salaries));
			this._workType = default(EntityRef<workType>);
			this._account = default(EntityRef<account>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employeeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int employeeID
		{
			get
			{
				return this._employeeID;
			}
			set
			{
				if ((this._employeeID != value))
				{
					this.OnemployeeIDChanging(value);
					this.SendPropertyChanging();
					this._employeeID = value;
					this.SendPropertyChanged("employeeID");
					this.OnemployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accountID", DbType="Int NOT NULL")]
		public int accountID
		{
			get
			{
				return this._accountID;
			}
			set
			{
				if ((this._accountID != value))
				{
					if (this._account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnaccountIDChanging(value);
					this.SendPropertyChanging();
					this._accountID = value;
					this.SendPropertyChanged("accountID");
					this.OnaccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empNationalNumber", DbType="NVarChar(15)")]
		public string empNationalNumber
		{
			get
			{
				return this._empNationalNumber;
			}
			set
			{
				if ((this._empNationalNumber != value))
				{
					this.OnempNationalNumberChanging(value);
					this.SendPropertyChanging();
					this._empNationalNumber = value;
					this.SendPropertyChanged("empNationalNumber");
					this.OnempNationalNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empBirthdate", DbType="Date")]
		public System.Nullable<System.DateTime> empBirthdate
		{
			get
			{
				return this._empBirthdate;
			}
			set
			{
				if ((this._empBirthdate != value))
				{
					this.OnempBirthdateChanging(value);
					this.SendPropertyChanging();
					this._empBirthdate = value;
					this.SendPropertyChanged("empBirthdate");
					this.OnempBirthdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employmentDate", DbType="Date")]
		public System.Nullable<System.DateTime> employmentDate
		{
			get
			{
				return this._employmentDate;
			}
			set
			{
				if ((this._employmentDate != value))
				{
					this.OnemploymentDateChanging(value);
					this.SendPropertyChanging();
					this._employmentDate = value;
					this.SendPropertyChanged("employmentDate");
					this.OnemploymentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empSalary", DbType="Int")]
		public System.Nullable<int> empSalary
		{
			get
			{
				return this._empSalary;
			}
			set
			{
				if ((this._empSalary != value))
				{
					this.OnempSalaryChanging(value);
					this.SendPropertyChanging();
					this._empSalary = value;
					this.SendPropertyChanged("empSalary");
					this.OnempSalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DemissionDate", DbType="Date")]
		public System.Nullable<System.DateTime> DemissionDate
		{
			get
			{
				return this._DemissionDate;
			}
			set
			{
				if ((this._DemissionDate != value))
				{
					this.OnDemissionDateChanging(value);
					this.SendPropertyChanging();
					this._DemissionDate = value;
					this.SendPropertyChanged("DemissionDate");
					this.OnDemissionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_workTypeID", DbType="Int NOT NULL")]
		public int workTypeID
		{
			get
			{
				return this._workTypeID;
			}
			set
			{
				if ((this._workTypeID != value))
				{
					if (this._workType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnworkTypeIDChanging(value);
					this.SendPropertyChanging();
					this._workTypeID = value;
					this.SendPropertyChanged("workTypeID");
					this.OnworkTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="employee_tempBill", Storage="_tempBills", ThisKey="employeeID", OtherKey="captainID")]
		public EntitySet<tempBill> tempBills
		{
			get
			{
				return this._tempBills;
			}
			set
			{
				this._tempBills.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="employee_bill", Storage="_bills", ThisKey="employeeID", OtherKey="captainID")]
		public EntitySet<bill> bills
		{
			get
			{
				return this._bills;
			}
			set
			{
				this._bills.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="employee_employeesInOut", Storage="_employeesInOuts", ThisKey="employeeID", OtherKey="employeeID")]
		public EntitySet<employeesInOut> employeesInOuts
		{
			get
			{
				return this._employeesInOuts;
			}
			set
			{
				this._employeesInOuts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="employee_salary", Storage="_salaries", ThisKey="employeeID", OtherKey="employeeID")]
		public EntitySet<salary> salaries
		{
			get
			{
				return this._salaries;
			}
			set
			{
				this._salaries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="workType_employee", Storage="_workType", ThisKey="workTypeID", OtherKey="workTypeID", IsForeignKey=true)]
		public workType workType
		{
			get
			{
				return this._workType.Entity;
			}
			set
			{
				workType previousValue = this._workType.Entity;
				if (((previousValue != value) 
							|| (this._workType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._workType.Entity = null;
						previousValue.employees.Remove(this);
					}
					this._workType.Entity = value;
					if ((value != null))
					{
						value.employees.Add(this);
						this._workTypeID = value.workTypeID;
					}
					else
					{
						this._workTypeID = default(int);
					}
					this.SendPropertyChanged("workType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="account_employee", Storage="_account", ThisKey="accountID", OtherKey="accountID", IsForeignKey=true)]
		public account account
		{
			get
			{
				return this._account.Entity;
			}
			set
			{
				account previousValue = this._account.Entity;
				if (((previousValue != value) 
							|| (this._account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._account.Entity = null;
						previousValue.employees.Remove(this);
					}
					this._account.Entity = value;
					if ((value != null))
					{
						value.employees.Add(this);
						this._accountID = value.accountID;
					}
					else
					{
						this._accountID = default(int);
					}
					this.SendPropertyChanged("account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tempBills(tempBill entity)
		{
			this.SendPropertyChanging();
			entity.employee = this;
		}
		
		private void detach_tempBills(tempBill entity)
		{
			this.SendPropertyChanging();
			entity.employee = null;
		}
		
		private void attach_bills(bill entity)
		{
			this.SendPropertyChanging();
			entity.employee = this;
		}
		
		private void detach_bills(bill entity)
		{
			this.SendPropertyChanging();
			entity.employee = null;
		}
		
		private void attach_employeesInOuts(employeesInOut entity)
		{
			this.SendPropertyChanging();
			entity.employee = this;
		}
		
		private void detach_employeesInOuts(employeesInOut entity)
		{
			this.SendPropertyChanging();
			entity.employee = null;
		}
		
		private void attach_salaries(salary entity)
		{
			this.SendPropertyChanging();
			entity.employee = this;
		}
		
		private void detach_salaries(salary entity)
		{
			this.SendPropertyChanging();
			entity.employee = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.getloggedin")]
	public partial class getloggedin
	{
		
		private int _employeeID;
		
		private string _accountName;
		
		public getloggedin()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employeeID", DbType="Int NOT NULL")]
		public int employeeID
		{
			get
			{
				return this._employeeID;
			}
			set
			{
				if ((this._employeeID != value))
				{
					this._employeeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accountName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string accountName
		{
			get
			{
				return this._accountName;
			}
			set
			{
				if ((this._accountName != value))
				{
					this._accountName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.getloggedout")]
	public partial class getloggedout
	{
		
		private int _employeeID;
		
		private string _accountName;
		
		public getloggedout()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employeeID", DbType="Int NOT NULL")]
		public int employeeID
		{
			get
			{
				return this._employeeID;
			}
			set
			{
				if ((this._employeeID != value))
				{
					this._employeeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accountName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string accountName
		{
			get
			{
				return this._accountName;
			}
			set
			{
				if ((this._accountName != value))
				{
					this._accountName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.storeHouse")]
	public partial class storeHouse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _primaryMaterialID;
		
		private int _quantity;
		
		private System.DateTime _date;
		
		private int _userID;
		
		private EntityRef<primaryMaterial> _primaryMaterial;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnprimaryMaterialIDChanging(int value);
    partial void OnprimaryMaterialIDChanged();
    partial void OnquantityChanging(int value);
    partial void OnquantityChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    partial void OnuserIDChanging(int value);
    partial void OnuserIDChanged();
    #endregion
		
		public storeHouse()
		{
			this._primaryMaterial = default(EntityRef<primaryMaterial>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_primaryMaterialID", DbType="Int NOT NULL")]
		public int primaryMaterialID
		{
			get
			{
				return this._primaryMaterialID;
			}
			set
			{
				if ((this._primaryMaterialID != value))
				{
					if (this._primaryMaterial.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnprimaryMaterialIDChanging(value);
					this.SendPropertyChanging();
					this._primaryMaterialID = value;
					this.SendPropertyChanged("primaryMaterialID");
					this.OnprimaryMaterialIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int NOT NULL")]
		public int quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="Date NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userID", DbType="Int NOT NULL")]
		public int userID
		{
			get
			{
				return this._userID;
			}
			set
			{
				if ((this._userID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuserIDChanging(value);
					this.SendPropertyChanging();
					this._userID = value;
					this.SendPropertyChanged("userID");
					this.OnuserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="primaryMaterial_storeHouse", Storage="_primaryMaterial", ThisKey="primaryMaterialID", OtherKey="materialID", IsForeignKey=true)]
		public primaryMaterial primaryMaterial
		{
			get
			{
				return this._primaryMaterial.Entity;
			}
			set
			{
				primaryMaterial previousValue = this._primaryMaterial.Entity;
				if (((previousValue != value) 
							|| (this._primaryMaterial.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._primaryMaterial.Entity = null;
						previousValue.storeHouses.Remove(this);
					}
					this._primaryMaterial.Entity = value;
					if ((value != null))
					{
						value.storeHouses.Add(this);
						this._primaryMaterialID = value.materialID;
					}
					else
					{
						this._primaryMaterialID = default(int);
					}
					this.SendPropertyChanged("primaryMaterial");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_storeHouse", Storage="_User", ThisKey="userID", OtherKey="userID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.storeHouses.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.storeHouses.Add(this);
						this._userID = value.userID;
					}
					else
					{
						this._userID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.getstorematerials")]
	public partial class getstorematerial
	{
		
		private string _materialName;
		
		private int _quantity;
		
		private System.DateTime _date;
		
		private string _username;
		
		private int _materialID;
		
		public getstorematerial()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_materialName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string materialName
		{
			get
			{
				return this._materialName;
			}
			set
			{
				if ((this._materialName != value))
				{
					this._materialName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int NOT NULL")]
		public int quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this._quantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="Date NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this._date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this._username = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_materialID", DbType="Int NOT NULL")]
		public int materialID
		{
			get
			{
				return this._materialID;
			}
			set
			{
				if ((this._materialID != value))
				{
					this._materialID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.getTables")]
	public partial class getTable
	{
		
		private int _tempBillID;
		
		private System.Nullable<int> _tableNumber;
		
		private string _accountName;
		
		public getTable()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tempBillID", DbType="Int NOT NULL")]
		public int tempBillID
		{
			get
			{
				return this._tempBillID;
			}
			set
			{
				if ((this._tempBillID != value))
				{
					this._tempBillID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tableNumber", DbType="Int")]
		public System.Nullable<int> tableNumber
		{
			get
			{
				return this._tableNumber;
			}
			set
			{
				if ((this._tableNumber != value))
				{
					this._tableNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accountName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string accountName
		{
			get
			{
				return this._accountName;
			}
			set
			{
				if ((this._accountName != value))
				{
					this._accountName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.getTableDetails")]
	public partial class getTableDetail
	{
		
		private string _arabicName;
		
		private int _price;
		
		private int _amount;
		
		private System.Nullable<int> _SUM;
		
		private int _tempBillID;
		
		private bool _served;
		
		public getTableDetail()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_arabicName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string arabicName
		{
			get
			{
				return this._arabicName;
			}
			set
			{
				if ((this._arabicName != value))
				{
					this._arabicName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Int NOT NULL")]
		public int price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this._price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount", DbType="Int NOT NULL")]
		public int amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this._amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUM", DbType="Int")]
		public System.Nullable<int> SUM
		{
			get
			{
				return this._SUM;
			}
			set
			{
				if ((this._SUM != value))
				{
					this._SUM = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tempBillID", DbType="Int NOT NULL")]
		public int tempBillID
		{
			get
			{
				return this._tempBillID;
			}
			set
			{
				if ((this._tempBillID != value))
				{
					this._tempBillID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_served", DbType="Bit NOT NULL")]
		public bool served
		{
			get
			{
				return this._served;
			}
			set
			{
				if ((this._served != value))
				{
					this._served = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tempBillsDetails")]
	public partial class tempBillsDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _tempBillDetailID;
		
		private int _tempBillID;
		
		private int _foodID;
		
		private int _price;
		
		private int _amount;
		
		private bool _served;
		
		private EntityRef<tempBill> _tempBill;
		
		private EntityRef<foodMaterial> _foodMaterial;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntempBillDetailIDChanging(int value);
    partial void OntempBillDetailIDChanged();
    partial void OntempBillIDChanging(int value);
    partial void OntempBillIDChanged();
    partial void OnfoodIDChanging(int value);
    partial void OnfoodIDChanged();
    partial void OnpriceChanging(int value);
    partial void OnpriceChanged();
    partial void OnamountChanging(int value);
    partial void OnamountChanged();
    partial void OnservedChanging(bool value);
    partial void OnservedChanged();
    #endregion
		
		public tempBillsDetail()
		{
			this._tempBill = default(EntityRef<tempBill>);
			this._foodMaterial = default(EntityRef<foodMaterial>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tempBillDetailID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int tempBillDetailID
		{
			get
			{
				return this._tempBillDetailID;
			}
			set
			{
				if ((this._tempBillDetailID != value))
				{
					this.OntempBillDetailIDChanging(value);
					this.SendPropertyChanging();
					this._tempBillDetailID = value;
					this.SendPropertyChanged("tempBillDetailID");
					this.OntempBillDetailIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tempBillID", DbType="Int NOT NULL")]
		public int tempBillID
		{
			get
			{
				return this._tempBillID;
			}
			set
			{
				if ((this._tempBillID != value))
				{
					if (this._tempBill.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OntempBillIDChanging(value);
					this.SendPropertyChanging();
					this._tempBillID = value;
					this.SendPropertyChanged("tempBillID");
					this.OntempBillIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_foodID", DbType="Int NOT NULL")]
		public int foodID
		{
			get
			{
				return this._foodID;
			}
			set
			{
				if ((this._foodID != value))
				{
					if (this._foodMaterial.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnfoodIDChanging(value);
					this.SendPropertyChanging();
					this._foodID = value;
					this.SendPropertyChanged("foodID");
					this.OnfoodIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Int NOT NULL")]
		public int price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount", DbType="Int NOT NULL")]
		public int amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this.OnamountChanging(value);
					this.SendPropertyChanging();
					this._amount = value;
					this.SendPropertyChanged("amount");
					this.OnamountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_served", DbType="Bit NOT NULL")]
		public bool served
		{
			get
			{
				return this._served;
			}
			set
			{
				if ((this._served != value))
				{
					this.OnservedChanging(value);
					this.SendPropertyChanging();
					this._served = value;
					this.SendPropertyChanged("served");
					this.OnservedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tempBill_tempBillsDetail", Storage="_tempBill", ThisKey="tempBillID", OtherKey="tempBillID", IsForeignKey=true)]
		public tempBill tempBill
		{
			get
			{
				return this._tempBill.Entity;
			}
			set
			{
				tempBill previousValue = this._tempBill.Entity;
				if (((previousValue != value) 
							|| (this._tempBill.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tempBill.Entity = null;
						previousValue.tempBillsDetails.Remove(this);
					}
					this._tempBill.Entity = value;
					if ((value != null))
					{
						value.tempBillsDetails.Add(this);
						this._tempBillID = value.tempBillID;
					}
					else
					{
						this._tempBillID = default(int);
					}
					this.SendPropertyChanged("tempBill");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="foodMaterial_tempBillsDetail", Storage="_foodMaterial", ThisKey="foodID", OtherKey="foodID", IsForeignKey=true)]
		public foodMaterial foodMaterial
		{
			get
			{
				return this._foodMaterial.Entity;
			}
			set
			{
				foodMaterial previousValue = this._foodMaterial.Entity;
				if (((previousValue != value) 
							|| (this._foodMaterial.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._foodMaterial.Entity = null;
						previousValue.tempBillsDetails.Remove(this);
					}
					this._foodMaterial.Entity = value;
					if ((value != null))
					{
						value.tempBillsDetails.Add(this);
						this._foodID = value.foodID;
					}
					else
					{
						this._foodID = default(int);
					}
					this.SendPropertyChanged("foodMaterial");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.getcaptains")]
	public partial class getcaptain
	{
		
		private int _employeeID;
		
		private string _accountName;
		
		public getcaptain()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employeeID", DbType="Int NOT NULL")]
		public int employeeID
		{
			get
			{
				return this._employeeID;
			}
			set
			{
				if ((this._employeeID != value))
				{
					this._employeeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accountName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string accountName
		{
			get
			{
				return this._accountName;
			}
			set
			{
				if ((this._accountName != value))
				{
					this._accountName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tempBills")]
	public partial class tempBill : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _tempBillID;
		
		private System.Nullable<int> _tableNumber;
		
		private System.Nullable<int> _captainID;
		
		private System.DateTime _date;
		
		private int _userID;
		
		private EntitySet<tempBillsDetail> _tempBillsDetails;
		
		private EntityRef<employee> _employee;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntempBillIDChanging(int value);
    partial void OntempBillIDChanged();
    partial void OntableNumberChanging(System.Nullable<int> value);
    partial void OntableNumberChanged();
    partial void OncaptainIDChanging(System.Nullable<int> value);
    partial void OncaptainIDChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    partial void OnuserIDChanging(int value);
    partial void OnuserIDChanged();
    #endregion
		
		public tempBill()
		{
			this._tempBillsDetails = new EntitySet<tempBillsDetail>(new Action<tempBillsDetail>(this.attach_tempBillsDetails), new Action<tempBillsDetail>(this.detach_tempBillsDetails));
			this._employee = default(EntityRef<employee>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tempBillID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int tempBillID
		{
			get
			{
				return this._tempBillID;
			}
			set
			{
				if ((this._tempBillID != value))
				{
					this.OntempBillIDChanging(value);
					this.SendPropertyChanging();
					this._tempBillID = value;
					this.SendPropertyChanged("tempBillID");
					this.OntempBillIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tableNumber", DbType="Int")]
		public System.Nullable<int> tableNumber
		{
			get
			{
				return this._tableNumber;
			}
			set
			{
				if ((this._tableNumber != value))
				{
					this.OntableNumberChanging(value);
					this.SendPropertyChanging();
					this._tableNumber = value;
					this.SendPropertyChanged("tableNumber");
					this.OntableNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_captainID", DbType="Int")]
		public System.Nullable<int> captainID
		{
			get
			{
				return this._captainID;
			}
			set
			{
				if ((this._captainID != value))
				{
					if (this._employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncaptainIDChanging(value);
					this.SendPropertyChanging();
					this._captainID = value;
					this.SendPropertyChanged("captainID");
					this.OncaptainIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="Date NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userID", DbType="Int NOT NULL")]
		public int userID
		{
			get
			{
				return this._userID;
			}
			set
			{
				if ((this._userID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuserIDChanging(value);
					this.SendPropertyChanging();
					this._userID = value;
					this.SendPropertyChanged("userID");
					this.OnuserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tempBill_tempBillsDetail", Storage="_tempBillsDetails", ThisKey="tempBillID", OtherKey="tempBillID")]
		public EntitySet<tempBillsDetail> tempBillsDetails
		{
			get
			{
				return this._tempBillsDetails;
			}
			set
			{
				this._tempBillsDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="employee_tempBill", Storage="_employee", ThisKey="captainID", OtherKey="employeeID", IsForeignKey=true)]
		public employee employee
		{
			get
			{
				return this._employee.Entity;
			}
			set
			{
				employee previousValue = this._employee.Entity;
				if (((previousValue != value) 
							|| (this._employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._employee.Entity = null;
						previousValue.tempBills.Remove(this);
					}
					this._employee.Entity = value;
					if ((value != null))
					{
						value.tempBills.Add(this);
						this._captainID = value.employeeID;
					}
					else
					{
						this._captainID = default(Nullable<int>);
					}
					this.SendPropertyChanged("employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_tempBill", Storage="_User", ThisKey="userID", OtherKey="userID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.tempBills.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.tempBills.Add(this);
						this._userID = value.userID;
					}
					else
					{
						this._userID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tempBillsDetails(tempBillsDetail entity)
		{
			this.SendPropertyChanging();
			entity.tempBill = this;
		}
		
		private void detach_tempBillsDetails(tempBillsDetail entity)
		{
			this.SendPropertyChanging();
			entity.tempBill = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.bills")]
	public partial class bill : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _billID;
		
		private int _billFinalValue;
		
		private int _tableNumber;
		
		private System.DateTime _startdate;
		
		private System.DateTime _enddate;
		
		private System.Nullable<int> _discount;
		
		private int _tax1;
		
		private int _tax2;
		
		private int _billNetValue;
		
		private int _captainID;
		
		private System.Nullable<int> _clientID;
		
		private int _userID;
		
		private EntitySet<billDetail> _billDetails;
		
		private EntityRef<employee> _employee;
		
		private EntityRef<account> _account;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnbillIDChanging(int value);
    partial void OnbillIDChanged();
    partial void OnbillFinalValueChanging(int value);
    partial void OnbillFinalValueChanged();
    partial void OntableNumberChanging(int value);
    partial void OntableNumberChanged();
    partial void OnstartdateChanging(System.DateTime value);
    partial void OnstartdateChanged();
    partial void OnenddateChanging(System.DateTime value);
    partial void OnenddateChanged();
    partial void OndiscountChanging(System.Nullable<int> value);
    partial void OndiscountChanged();
    partial void Ontax1Changing(int value);
    partial void Ontax1Changed();
    partial void Ontax2Changing(int value);
    partial void Ontax2Changed();
    partial void OnbillNetValueChanging(int value);
    partial void OnbillNetValueChanged();
    partial void OncaptainIDChanging(int value);
    partial void OncaptainIDChanged();
    partial void OnclientIDChanging(System.Nullable<int> value);
    partial void OnclientIDChanged();
    partial void OnuserIDChanging(int value);
    partial void OnuserIDChanged();
    #endregion
		
		public bill()
		{
			this._billDetails = new EntitySet<billDetail>(new Action<billDetail>(this.attach_billDetails), new Action<billDetail>(this.detach_billDetails));
			this._employee = default(EntityRef<employee>);
			this._account = default(EntityRef<account>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_billID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int billID
		{
			get
			{
				return this._billID;
			}
			set
			{
				if ((this._billID != value))
				{
					this.OnbillIDChanging(value);
					this.SendPropertyChanging();
					this._billID = value;
					this.SendPropertyChanged("billID");
					this.OnbillIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_billFinalValue", DbType="Int NOT NULL")]
		public int billFinalValue
		{
			get
			{
				return this._billFinalValue;
			}
			set
			{
				if ((this._billFinalValue != value))
				{
					this.OnbillFinalValueChanging(value);
					this.SendPropertyChanging();
					this._billFinalValue = value;
					this.SendPropertyChanged("billFinalValue");
					this.OnbillFinalValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tableNumber", DbType="Int NOT NULL")]
		public int tableNumber
		{
			get
			{
				return this._tableNumber;
			}
			set
			{
				if ((this._tableNumber != value))
				{
					this.OntableNumberChanging(value);
					this.SendPropertyChanging();
					this._tableNumber = value;
					this.SendPropertyChanged("tableNumber");
					this.OntableNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_startdate", DbType="Date NOT NULL")]
		public System.DateTime startdate
		{
			get
			{
				return this._startdate;
			}
			set
			{
				if ((this._startdate != value))
				{
					this.OnstartdateChanging(value);
					this.SendPropertyChanging();
					this._startdate = value;
					this.SendPropertyChanged("startdate");
					this.OnstartdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_enddate", DbType="Date NOT NULL")]
		public System.DateTime enddate
		{
			get
			{
				return this._enddate;
			}
			set
			{
				if ((this._enddate != value))
				{
					this.OnenddateChanging(value);
					this.SendPropertyChanging();
					this._enddate = value;
					this.SendPropertyChanged("enddate");
					this.OnenddateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_discount", DbType="Int")]
		public System.Nullable<int> discount
		{
			get
			{
				return this._discount;
			}
			set
			{
				if ((this._discount != value))
				{
					this.OndiscountChanging(value);
					this.SendPropertyChanging();
					this._discount = value;
					this.SendPropertyChanged("discount");
					this.OndiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tax1", DbType="Int NOT NULL")]
		public int tax1
		{
			get
			{
				return this._tax1;
			}
			set
			{
				if ((this._tax1 != value))
				{
					this.Ontax1Changing(value);
					this.SendPropertyChanging();
					this._tax1 = value;
					this.SendPropertyChanged("tax1");
					this.Ontax1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tax2", DbType="Int NOT NULL")]
		public int tax2
		{
			get
			{
				return this._tax2;
			}
			set
			{
				if ((this._tax2 != value))
				{
					this.Ontax2Changing(value);
					this.SendPropertyChanging();
					this._tax2 = value;
					this.SendPropertyChanged("tax2");
					this.Ontax2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_billNetValue", DbType="Int NOT NULL")]
		public int billNetValue
		{
			get
			{
				return this._billNetValue;
			}
			set
			{
				if ((this._billNetValue != value))
				{
					this.OnbillNetValueChanging(value);
					this.SendPropertyChanging();
					this._billNetValue = value;
					this.SendPropertyChanged("billNetValue");
					this.OnbillNetValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_captainID", DbType="Int NOT NULL")]
		public int captainID
		{
			get
			{
				return this._captainID;
			}
			set
			{
				if ((this._captainID != value))
				{
					if (this._employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncaptainIDChanging(value);
					this.SendPropertyChanging();
					this._captainID = value;
					this.SendPropertyChanged("captainID");
					this.OncaptainIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_clientID", DbType="Int")]
		public System.Nullable<int> clientID
		{
			get
			{
				return this._clientID;
			}
			set
			{
				if ((this._clientID != value))
				{
					if (this._account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnclientIDChanging(value);
					this.SendPropertyChanging();
					this._clientID = value;
					this.SendPropertyChanged("clientID");
					this.OnclientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userID", DbType="Int NOT NULL")]
		public int userID
		{
			get
			{
				return this._userID;
			}
			set
			{
				if ((this._userID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuserIDChanging(value);
					this.SendPropertyChanging();
					this._userID = value;
					this.SendPropertyChanged("userID");
					this.OnuserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="bill_billDetail", Storage="_billDetails", ThisKey="billID", OtherKey="billID")]
		public EntitySet<billDetail> billDetails
		{
			get
			{
				return this._billDetails;
			}
			set
			{
				this._billDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="employee_bill", Storage="_employee", ThisKey="captainID", OtherKey="employeeID", IsForeignKey=true)]
		public employee employee
		{
			get
			{
				return this._employee.Entity;
			}
			set
			{
				employee previousValue = this._employee.Entity;
				if (((previousValue != value) 
							|| (this._employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._employee.Entity = null;
						previousValue.bills.Remove(this);
					}
					this._employee.Entity = value;
					if ((value != null))
					{
						value.bills.Add(this);
						this._captainID = value.employeeID;
					}
					else
					{
						this._captainID = default(int);
					}
					this.SendPropertyChanged("employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="account_bill", Storage="_account", ThisKey="clientID", OtherKey="accountID", IsForeignKey=true)]
		public account account
		{
			get
			{
				return this._account.Entity;
			}
			set
			{
				account previousValue = this._account.Entity;
				if (((previousValue != value) 
							|| (this._account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._account.Entity = null;
						previousValue.bills.Remove(this);
					}
					this._account.Entity = value;
					if ((value != null))
					{
						value.bills.Add(this);
						this._clientID = value.accountID;
					}
					else
					{
						this._clientID = default(Nullable<int>);
					}
					this.SendPropertyChanged("account");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_bill", Storage="_User", ThisKey="userID", OtherKey="userID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.bills.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.bills.Add(this);
						this._userID = value.userID;
					}
					else
					{
						this._userID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_billDetails(billDetail entity)
		{
			this.SendPropertyChanging();
			entity.bill = this;
		}
		
		private void detach_billDetails(billDetail entity)
		{
			this.SendPropertyChanging();
			entity.bill = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.billDetails")]
	public partial class billDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _detailID;
		
		private int _billID;
		
		private int _foodID;
		
		private int _price;
		
		private int _amount;
		
		private EntityRef<bill> _bill;
		
		private EntityRef<foodMaterial> _foodMaterial;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OndetailIDChanging(int value);
    partial void OndetailIDChanged();
    partial void OnbillIDChanging(int value);
    partial void OnbillIDChanged();
    partial void OnfoodIDChanging(int value);
    partial void OnfoodIDChanged();
    partial void OnpriceChanging(int value);
    partial void OnpriceChanged();
    partial void OnamountChanging(int value);
    partial void OnamountChanged();
    #endregion
		
		public billDetail()
		{
			this._bill = default(EntityRef<bill>);
			this._foodMaterial = default(EntityRef<foodMaterial>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_detailID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int detailID
		{
			get
			{
				return this._detailID;
			}
			set
			{
				if ((this._detailID != value))
				{
					this.OndetailIDChanging(value);
					this.SendPropertyChanging();
					this._detailID = value;
					this.SendPropertyChanged("detailID");
					this.OndetailIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_billID", DbType="Int NOT NULL")]
		public int billID
		{
			get
			{
				return this._billID;
			}
			set
			{
				if ((this._billID != value))
				{
					if (this._bill.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnbillIDChanging(value);
					this.SendPropertyChanging();
					this._billID = value;
					this.SendPropertyChanged("billID");
					this.OnbillIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_foodID", DbType="Int NOT NULL")]
		public int foodID
		{
			get
			{
				return this._foodID;
			}
			set
			{
				if ((this._foodID != value))
				{
					if (this._foodMaterial.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnfoodIDChanging(value);
					this.SendPropertyChanging();
					this._foodID = value;
					this.SendPropertyChanged("foodID");
					this.OnfoodIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Int NOT NULL")]
		public int price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount", DbType="Int NOT NULL")]
		public int amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this.OnamountChanging(value);
					this.SendPropertyChanging();
					this._amount = value;
					this.SendPropertyChanged("amount");
					this.OnamountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="bill_billDetail", Storage="_bill", ThisKey="billID", OtherKey="billID", IsForeignKey=true)]
		public bill bill
		{
			get
			{
				return this._bill.Entity;
			}
			set
			{
				bill previousValue = this._bill.Entity;
				if (((previousValue != value) 
							|| (this._bill.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._bill.Entity = null;
						previousValue.billDetails.Remove(this);
					}
					this._bill.Entity = value;
					if ((value != null))
					{
						value.billDetails.Add(this);
						this._billID = value.billID;
					}
					else
					{
						this._billID = default(int);
					}
					this.SendPropertyChanged("bill");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="foodMaterial_billDetail", Storage="_foodMaterial", ThisKey="foodID", OtherKey="foodID", IsForeignKey=true)]
		public foodMaterial foodMaterial
		{
			get
			{
				return this._foodMaterial.Entity;
			}
			set
			{
				foodMaterial previousValue = this._foodMaterial.Entity;
				if (((previousValue != value) 
							|| (this._foodMaterial.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._foodMaterial.Entity = null;
						previousValue.billDetails.Remove(this);
					}
					this._foodMaterial.Entity = value;
					if ((value != null))
					{
						value.billDetails.Add(this);
						this._foodID = value.foodID;
					}
					else
					{
						this._foodID = default(int);
					}
					this.SendPropertyChanged("foodMaterial");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.getbilldetails")]
	public partial class getbilldetail
	{
		
		private string _arabicName;
		
		private int _price;
		
		private int _amount;
		
		private System.Nullable<int> _SUM;
		
		private int _billID;
		
		public getbilldetail()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_arabicName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string arabicName
		{
			get
			{
				return this._arabicName;
			}
			set
			{
				if ((this._arabicName != value))
				{
					this._arabicName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Int NOT NULL")]
		public int price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this._price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount", DbType="Int NOT NULL")]
		public int amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this._amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUM", DbType="Int")]
		public System.Nullable<int> SUM
		{
			get
			{
				return this._SUM;
			}
			set
			{
				if ((this._SUM != value))
				{
					this._SUM = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_billID", DbType="Int NOT NULL")]
		public int billID
		{
			get
			{
				return this._billID;
			}
			set
			{
				if ((this._billID != value))
				{
					this._billID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.workType")]
	public partial class workType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _workTypeID;
		
		private string _workType1;
		
		private EntitySet<employee> _employees;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnworkTypeIDChanging(int value);
    partial void OnworkTypeIDChanged();
    partial void OnworkType1Changing(string value);
    partial void OnworkType1Changed();
    #endregion
		
		public workType()
		{
			this._employees = new EntitySet<employee>(new Action<employee>(this.attach_employees), new Action<employee>(this.detach_employees));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_workTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int workTypeID
		{
			get
			{
				return this._workTypeID;
			}
			set
			{
				if ((this._workTypeID != value))
				{
					this.OnworkTypeIDChanging(value);
					this.SendPropertyChanging();
					this._workTypeID = value;
					this.SendPropertyChanged("workTypeID");
					this.OnworkTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="workType", Storage="_workType1", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string workType1
		{
			get
			{
				return this._workType1;
			}
			set
			{
				if ((this._workType1 != value))
				{
					this.OnworkType1Changing(value);
					this.SendPropertyChanging();
					this._workType1 = value;
					this.SendPropertyChanged("workType1");
					this.OnworkType1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="workType_employee", Storage="_employees", ThisKey="workTypeID", OtherKey="workTypeID")]
		public EntitySet<employee> employees
		{
			get
			{
				return this._employees;
			}
			set
			{
				this._employees.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_employees(employee entity)
		{
			this.SendPropertyChanging();
			entity.workType = this;
		}
		
		private void detach_employees(employee entity)
		{
			this.SendPropertyChanging();
			entity.workType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.getKitchenFood")]
	public partial class getKitchenFood
	{
		
		private int _tempBillDetailID;
		
		private System.Nullable<int> _tableNumber;
		
		private string _arabicName;
		
		private int _amount;
		
		private bool _served;
		
		public getKitchenFood()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tempBillDetailID", DbType="Int NOT NULL")]
		public int tempBillDetailID
		{
			get
			{
				return this._tempBillDetailID;
			}
			set
			{
				if ((this._tempBillDetailID != value))
				{
					this._tempBillDetailID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tableNumber", DbType="Int")]
		public System.Nullable<int> tableNumber
		{
			get
			{
				return this._tableNumber;
			}
			set
			{
				if ((this._tableNumber != value))
				{
					this._tableNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_arabicName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string arabicName
		{
			get
			{
				return this._arabicName;
			}
			set
			{
				if ((this._arabicName != value))
				{
					this._arabicName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount", DbType="Int NOT NULL")]
		public int amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this._amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_served", DbType="Bit NOT NULL")]
		public bool served
		{
			get
			{
				return this._served;
			}
			set
			{
				if ((this._served != value))
				{
					this._served = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GetPMaterial")]
	public partial class GetPMaterial
	{
		
		private int _materialID;
		
		private string _materialName;
		
		private string _unitName;
		
		private System.Nullable<int> _lastPrice;
		
		public GetPMaterial()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_materialID", DbType="Int NOT NULL")]
		public int materialID
		{
			get
			{
				return this._materialID;
			}
			set
			{
				if ((this._materialID != value))
				{
					this._materialID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_materialName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string materialName
		{
			get
			{
				return this._materialName;
			}
			set
			{
				if ((this._materialName != value))
				{
					this._materialName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_unitName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string unitName
		{
			get
			{
				return this._unitName;
			}
			set
			{
				if ((this._unitName != value))
				{
					this._unitName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastPrice", DbType="Int")]
		public System.Nullable<int> lastPrice
		{
			get
			{
				return this._lastPrice;
			}
			set
			{
				if ((this._lastPrice != value))
				{
					this._lastPrice = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GetFoodMenu")]
	public partial class GetFoodMenu
	{
		
		private int _foodID;
		
		private string _arabicName;
		
		private string _unitName;
		
		private System.Nullable<int> _price;
		
		public GetFoodMenu()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_foodID", DbType="Int NOT NULL")]
		public int foodID
		{
			get
			{
				return this._foodID;
			}
			set
			{
				if ((this._foodID != value))
				{
					this._foodID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_arabicName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string arabicName
		{
			get
			{
				return this._arabicName;
			}
			set
			{
				if ((this._arabicName != value))
				{
					this._arabicName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_unitName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string unitName
		{
			get
			{
				return this._unitName;
			}
			set
			{
				if ((this._unitName != value))
				{
					this._unitName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Int")]
		public System.Nullable<int> price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this._price = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.foodMaterialRelation")]
	public partial class foodMaterialRelation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _relationID;
		
		private int _foodMaterialID;
		
		private int _primaryMaterialID;
		
		private decimal _amount;
		
		private EntityRef<foodMaterial> _foodMaterial;
		
		private EntityRef<primaryMaterial> _primaryMaterial;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnrelationIDChanging(int value);
    partial void OnrelationIDChanged();
    partial void OnfoodMaterialIDChanging(int value);
    partial void OnfoodMaterialIDChanged();
    partial void OnprimaryMaterialIDChanging(int value);
    partial void OnprimaryMaterialIDChanged();
    partial void OnamountChanging(decimal value);
    partial void OnamountChanged();
    #endregion
		
		public foodMaterialRelation()
		{
			this._foodMaterial = default(EntityRef<foodMaterial>);
			this._primaryMaterial = default(EntityRef<primaryMaterial>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_relationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int relationID
		{
			get
			{
				return this._relationID;
			}
			set
			{
				if ((this._relationID != value))
				{
					this.OnrelationIDChanging(value);
					this.SendPropertyChanging();
					this._relationID = value;
					this.SendPropertyChanged("relationID");
					this.OnrelationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_foodMaterialID", DbType="Int NOT NULL")]
		public int foodMaterialID
		{
			get
			{
				return this._foodMaterialID;
			}
			set
			{
				if ((this._foodMaterialID != value))
				{
					if (this._foodMaterial.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnfoodMaterialIDChanging(value);
					this.SendPropertyChanging();
					this._foodMaterialID = value;
					this.SendPropertyChanged("foodMaterialID");
					this.OnfoodMaterialIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_primaryMaterialID", DbType="Int NOT NULL")]
		public int primaryMaterialID
		{
			get
			{
				return this._primaryMaterialID;
			}
			set
			{
				if ((this._primaryMaterialID != value))
				{
					if (this._primaryMaterial.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnprimaryMaterialIDChanging(value);
					this.SendPropertyChanging();
					this._primaryMaterialID = value;
					this.SendPropertyChanged("primaryMaterialID");
					this.OnprimaryMaterialIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount", DbType="Decimal(4,2) NOT NULL")]
		public decimal amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this.OnamountChanging(value);
					this.SendPropertyChanging();
					this._amount = value;
					this.SendPropertyChanged("amount");
					this.OnamountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="foodMaterial_foodMaterialRelation", Storage="_foodMaterial", ThisKey="foodMaterialID", OtherKey="foodID", IsForeignKey=true)]
		public foodMaterial foodMaterial
		{
			get
			{
				return this._foodMaterial.Entity;
			}
			set
			{
				foodMaterial previousValue = this._foodMaterial.Entity;
				if (((previousValue != value) 
							|| (this._foodMaterial.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._foodMaterial.Entity = null;
						previousValue.foodMaterialRelations.Remove(this);
					}
					this._foodMaterial.Entity = value;
					if ((value != null))
					{
						value.foodMaterialRelations.Add(this);
						this._foodMaterialID = value.foodID;
					}
					else
					{
						this._foodMaterialID = default(int);
					}
					this.SendPropertyChanged("foodMaterial");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="primaryMaterial_foodMaterialRelation", Storage="_primaryMaterial", ThisKey="primaryMaterialID", OtherKey="materialID", IsForeignKey=true)]
		public primaryMaterial primaryMaterial
		{
			get
			{
				return this._primaryMaterial.Entity;
			}
			set
			{
				primaryMaterial previousValue = this._primaryMaterial.Entity;
				if (((previousValue != value) 
							|| (this._primaryMaterial.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._primaryMaterial.Entity = null;
						previousValue.foodMaterialRelations.Remove(this);
					}
					this._primaryMaterial.Entity = value;
					if ((value != null))
					{
						value.foodMaterialRelations.Add(this);
						this._primaryMaterialID = value.materialID;
					}
					else
					{
						this._primaryMaterialID = default(int);
					}
					this.SendPropertyChanged("primaryMaterial");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.getRelations")]
	public partial class getRelation
	{
		
		private int _relationID;
		
		private int _foodMaterialID;
		
		private string _materialName;
		
		private string _unitName;
		
		private decimal _amount;
		
		private System.Nullable<decimal> _SUM;
		
		public getRelation()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_relationID", DbType="Int NOT NULL")]
		public int relationID
		{
			get
			{
				return this._relationID;
			}
			set
			{
				if ((this._relationID != value))
				{
					this._relationID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_foodMaterialID", DbType="Int NOT NULL")]
		public int foodMaterialID
		{
			get
			{
				return this._foodMaterialID;
			}
			set
			{
				if ((this._foodMaterialID != value))
				{
					this._foodMaterialID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_materialName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string materialName
		{
			get
			{
				return this._materialName;
			}
			set
			{
				if ((this._materialName != value))
				{
					this._materialName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_unitName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string unitName
		{
			get
			{
				return this._unitName;
			}
			set
			{
				if ((this._unitName != value))
				{
					this._unitName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount", DbType="Decimal(4,2) NOT NULL")]
		public decimal amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this._amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUM", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> SUM
		{
			get
			{
				return this._SUM;
			}
			set
			{
				if ((this._SUM != value))
				{
					this._SUM = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.countingUnit")]
	public partial class countingUnit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _unitID;
		
		private string _unitName;
		
		private EntitySet<foodMaterial> _foodMaterials;
		
		private EntitySet<primaryMaterial> _primaryMaterials;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnunitIDChanging(int value);
    partial void OnunitIDChanged();
    partial void OnunitNameChanging(string value);
    partial void OnunitNameChanged();
    #endregion
		
		public countingUnit()
		{
			this._foodMaterials = new EntitySet<foodMaterial>(new Action<foodMaterial>(this.attach_foodMaterials), new Action<foodMaterial>(this.detach_foodMaterials));
			this._primaryMaterials = new EntitySet<primaryMaterial>(new Action<primaryMaterial>(this.attach_primaryMaterials), new Action<primaryMaterial>(this.detach_primaryMaterials));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_unitID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int unitID
		{
			get
			{
				return this._unitID;
			}
			set
			{
				if ((this._unitID != value))
				{
					this.OnunitIDChanging(value);
					this.SendPropertyChanging();
					this._unitID = value;
					this.SendPropertyChanged("unitID");
					this.OnunitIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_unitName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string unitName
		{
			get
			{
				return this._unitName;
			}
			set
			{
				if ((this._unitName != value))
				{
					this.OnunitNameChanging(value);
					this.SendPropertyChanging();
					this._unitName = value;
					this.SendPropertyChanged("unitName");
					this.OnunitNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="countingUnit_foodMaterial", Storage="_foodMaterials", ThisKey="unitID", OtherKey="unitID")]
		public EntitySet<foodMaterial> foodMaterials
		{
			get
			{
				return this._foodMaterials;
			}
			set
			{
				this._foodMaterials.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="countingUnit_primaryMaterial", Storage="_primaryMaterials", ThisKey="unitID", OtherKey="countUnitID")]
		public EntitySet<primaryMaterial> primaryMaterials
		{
			get
			{
				return this._primaryMaterials;
			}
			set
			{
				this._primaryMaterials.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_foodMaterials(foodMaterial entity)
		{
			this.SendPropertyChanging();
			entity.countingUnit = this;
		}
		
		private void detach_foodMaterials(foodMaterial entity)
		{
			this.SendPropertyChanging();
			entity.countingUnit = null;
		}
		
		private void attach_primaryMaterials(primaryMaterial entity)
		{
			this.SendPropertyChanging();
			entity.countingUnit = this;
		}
		
		private void detach_primaryMaterials(primaryMaterial entity)
		{
			this.SendPropertyChanging();
			entity.countingUnit = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.getoldbills")]
	public partial class getoldbill
	{
		
		private int _billID;
		
		private int _billFinalValue;
		
		private int _tableNumber;
		
		private System.DateTime _startdate;
		
		private System.DateTime _enddate;
		
		private System.Nullable<int> _discount;
		
		private int _tax1;
		
		private int _tax2;
		
		private int _billNetValue;
		
		private string _captain;
		
		private string _client;
		
		private string _username;
		
		private int _captainID;
		
		public getoldbill()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_billID", DbType="Int NOT NULL")]
		public int billID
		{
			get
			{
				return this._billID;
			}
			set
			{
				if ((this._billID != value))
				{
					this._billID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_billFinalValue", DbType="Int NOT NULL")]
		public int billFinalValue
		{
			get
			{
				return this._billFinalValue;
			}
			set
			{
				if ((this._billFinalValue != value))
				{
					this._billFinalValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tableNumber", DbType="Int NOT NULL")]
		public int tableNumber
		{
			get
			{
				return this._tableNumber;
			}
			set
			{
				if ((this._tableNumber != value))
				{
					this._tableNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_startdate", DbType="Date NOT NULL")]
		public System.DateTime startdate
		{
			get
			{
				return this._startdate;
			}
			set
			{
				if ((this._startdate != value))
				{
					this._startdate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_enddate", DbType="Date NOT NULL")]
		public System.DateTime enddate
		{
			get
			{
				return this._enddate;
			}
			set
			{
				if ((this._enddate != value))
				{
					this._enddate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_discount", DbType="Int")]
		public System.Nullable<int> discount
		{
			get
			{
				return this._discount;
			}
			set
			{
				if ((this._discount != value))
				{
					this._discount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tax1", DbType="Int NOT NULL")]
		public int tax1
		{
			get
			{
				return this._tax1;
			}
			set
			{
				if ((this._tax1 != value))
				{
					this._tax1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tax2", DbType="Int NOT NULL")]
		public int tax2
		{
			get
			{
				return this._tax2;
			}
			set
			{
				if ((this._tax2 != value))
				{
					this._tax2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_billNetValue", DbType="Int NOT NULL")]
		public int billNetValue
		{
			get
			{
				return this._billNetValue;
			}
			set
			{
				if ((this._billNetValue != value))
				{
					this._billNetValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_captain", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string captain
		{
			get
			{
				return this._captain;
			}
			set
			{
				if ((this._captain != value))
				{
					this._captain = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_client", DbType="NVarChar(50)")]
		public string client
		{
			get
			{
				return this._client;
			}
			set
			{
				if ((this._client != value))
				{
					this._client = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this._username = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_captainID", DbType="Int NOT NULL")]
		public int captainID
		{
			get
			{
				return this._captainID;
			}
			set
			{
				if ((this._captainID != value))
				{
					this._captainID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.cashMoney")]
	public partial class cashMoney : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _userID;
		
		private int _in_money;
		
		private int _out_money;
		
		private int _accountID;
		
		private string _explanation;
		
		private System.DateTime _date;
		
		private int _transferTypeID;
		
		private EntityRef<transferType> _transferType;
		
		private EntityRef<account> _account;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnuserIDChanging(int value);
    partial void OnuserIDChanged();
    partial void Onin_moneyChanging(int value);
    partial void Onin_moneyChanged();
    partial void Onout_moneyChanging(int value);
    partial void Onout_moneyChanged();
    partial void OnaccountIDChanging(int value);
    partial void OnaccountIDChanged();
    partial void OnexplanationChanging(string value);
    partial void OnexplanationChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    partial void OntransferTypeIDChanging(int value);
    partial void OntransferTypeIDChanged();
    #endregion
		
		public cashMoney()
		{
			this._transferType = default(EntityRef<transferType>);
			this._account = default(EntityRef<account>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userID", DbType="Int NOT NULL")]
		public int userID
		{
			get
			{
				return this._userID;
			}
			set
			{
				if ((this._userID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuserIDChanging(value);
					this.SendPropertyChanging();
					this._userID = value;
					this.SendPropertyChanged("userID");
					this.OnuserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_in_money", DbType="Int NOT NULL")]
		public int in_money
		{
			get
			{
				return this._in_money;
			}
			set
			{
				if ((this._in_money != value))
				{
					this.Onin_moneyChanging(value);
					this.SendPropertyChanging();
					this._in_money = value;
					this.SendPropertyChanged("in_money");
					this.Onin_moneyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_out_money", DbType="Int NOT NULL")]
		public int out_money
		{
			get
			{
				return this._out_money;
			}
			set
			{
				if ((this._out_money != value))
				{
					this.Onout_moneyChanging(value);
					this.SendPropertyChanging();
					this._out_money = value;
					this.SendPropertyChanged("out_money");
					this.Onout_moneyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accountID", DbType="Int NOT NULL")]
		public int accountID
		{
			get
			{
				return this._accountID;
			}
			set
			{
				if ((this._accountID != value))
				{
					if (this._account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnaccountIDChanging(value);
					this.SendPropertyChanging();
					this._accountID = value;
					this.SendPropertyChanged("accountID");
					this.OnaccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_explanation", DbType="NVarChar(MAX)")]
		public string explanation
		{
			get
			{
				return this._explanation;
			}
			set
			{
				if ((this._explanation != value))
				{
					this.OnexplanationChanging(value);
					this.SendPropertyChanging();
					this._explanation = value;
					this.SendPropertyChanged("explanation");
					this.OnexplanationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="Date NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transferTypeID", DbType="Int NOT NULL")]
		public int transferTypeID
		{
			get
			{
				return this._transferTypeID;
			}
			set
			{
				if ((this._transferTypeID != value))
				{
					if (this._transferType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OntransferTypeIDChanging(value);
					this.SendPropertyChanging();
					this._transferTypeID = value;
					this.SendPropertyChanged("transferTypeID");
					this.OntransferTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="transferType_cashMoney", Storage="_transferType", ThisKey="transferTypeID", OtherKey="transferTypeID", IsForeignKey=true)]
		public transferType transferType
		{
			get
			{
				return this._transferType.Entity;
			}
			set
			{
				transferType previousValue = this._transferType.Entity;
				if (((previousValue != value) 
							|| (this._transferType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._transferType.Entity = null;
						previousValue.cashMoneys.Remove(this);
					}
					this._transferType.Entity = value;
					if ((value != null))
					{
						value.cashMoneys.Add(this);
						this._transferTypeID = value.transferTypeID;
					}
					else
					{
						this._transferTypeID = default(int);
					}
					this.SendPropertyChanged("transferType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="account_cashMoney", Storage="_account", ThisKey="accountID", OtherKey="accountID", IsForeignKey=true)]
		public account account
		{
			get
			{
				return this._account.Entity;
			}
			set
			{
				account previousValue = this._account.Entity;
				if (((previousValue != value) 
							|| (this._account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._account.Entity = null;
						previousValue.cashMoneys.Remove(this);
					}
					this._account.Entity = value;
					if ((value != null))
					{
						value.cashMoneys.Add(this);
						this._accountID = value.accountID;
					}
					else
					{
						this._accountID = default(int);
					}
					this.SendPropertyChanged("account");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_cashMoney", Storage="_User", ThisKey="userID", OtherKey="userID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.cashMoneys.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.cashMoneys.Add(this);
						this._userID = value.userID;
					}
					else
					{
						this._userID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.getCashMoney")]
	public partial class getCashMoney
	{
		
		private int _in_money;
		
		private int _out_money;
		
		private string _accountName;
		
		private string _explanation;
		
		private System.DateTime _date;
		
		private string _transferType;
		
		private string _username;
		
		private int _userID;
		
		private int _accountID;
		
		private int _transferTypeID;
		
		public getCashMoney()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_in_money", DbType="Int NOT NULL")]
		public int in_money
		{
			get
			{
				return this._in_money;
			}
			set
			{
				if ((this._in_money != value))
				{
					this._in_money = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_out_money", DbType="Int NOT NULL")]
		public int out_money
		{
			get
			{
				return this._out_money;
			}
			set
			{
				if ((this._out_money != value))
				{
					this._out_money = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accountName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string accountName
		{
			get
			{
				return this._accountName;
			}
			set
			{
				if ((this._accountName != value))
				{
					this._accountName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_explanation", DbType="NVarChar(MAX)")]
		public string explanation
		{
			get
			{
				return this._explanation;
			}
			set
			{
				if ((this._explanation != value))
				{
					this._explanation = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="Date NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this._date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transferType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string transferType
		{
			get
			{
				return this._transferType;
			}
			set
			{
				if ((this._transferType != value))
				{
					this._transferType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this._username = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userID", DbType="Int NOT NULL")]
		public int userID
		{
			get
			{
				return this._userID;
			}
			set
			{
				if ((this._userID != value))
				{
					this._userID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accountID", DbType="Int NOT NULL")]
		public int accountID
		{
			get
			{
				return this._accountID;
			}
			set
			{
				if ((this._accountID != value))
				{
					this._accountID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transferTypeID", DbType="Int NOT NULL")]
		public int transferTypeID
		{
			get
			{
				return this._transferTypeID;
			}
			set
			{
				if ((this._transferTypeID != value))
				{
					this._transferTypeID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.transferType")]
	public partial class transferType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _transferTypeID;
		
		private string _transferType1;
		
		private EntitySet<cashMoney> _cashMoneys;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntransferTypeIDChanging(int value);
    partial void OntransferTypeIDChanged();
    partial void OntransferType1Changing(string value);
    partial void OntransferType1Changed();
    #endregion
		
		public transferType()
		{
			this._cashMoneys = new EntitySet<cashMoney>(new Action<cashMoney>(this.attach_cashMoneys), new Action<cashMoney>(this.detach_cashMoneys));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transferTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int transferTypeID
		{
			get
			{
				return this._transferTypeID;
			}
			set
			{
				if ((this._transferTypeID != value))
				{
					this.OntransferTypeIDChanging(value);
					this.SendPropertyChanging();
					this._transferTypeID = value;
					this.SendPropertyChanged("transferTypeID");
					this.OntransferTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="transferType", Storage="_transferType1", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string transferType1
		{
			get
			{
				return this._transferType1;
			}
			set
			{
				if ((this._transferType1 != value))
				{
					this.OntransferType1Changing(value);
					this.SendPropertyChanging();
					this._transferType1 = value;
					this.SendPropertyChanged("transferType1");
					this.OntransferType1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="transferType_cashMoney", Storage="_cashMoneys", ThisKey="transferTypeID", OtherKey="transferTypeID")]
		public EntitySet<cashMoney> cashMoneys
		{
			get
			{
				return this._cashMoneys;
			}
			set
			{
				this._cashMoneys.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_cashMoneys(cashMoney entity)
		{
			this.SendPropertyChanging();
			entity.transferType = this;
		}
		
		private void detach_cashMoneys(cashMoney entity)
		{
			this.SendPropertyChanging();
			entity.transferType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.employeesInOut")]
	public partial class employeesInOut : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _employeeID;
		
		private System.TimeSpan _timeIn;
		
		private System.Nullable<System.TimeSpan> _timeOut;
		
		private System.DateTime _Date;
		
		private EntityRef<employee> _employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnemployeeIDChanging(int value);
    partial void OnemployeeIDChanged();
    partial void OntimeInChanging(System.TimeSpan value);
    partial void OntimeInChanged();
    partial void OntimeOutChanging(System.Nullable<System.TimeSpan> value);
    partial void OntimeOutChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    #endregion
		
		public employeesInOut()
		{
			this._employee = default(EntityRef<employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employeeID", DbType="Int NOT NULL")]
		public int employeeID
		{
			get
			{
				return this._employeeID;
			}
			set
			{
				if ((this._employeeID != value))
				{
					if (this._employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnemployeeIDChanging(value);
					this.SendPropertyChanging();
					this._employeeID = value;
					this.SendPropertyChanged("employeeID");
					this.OnemployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timeIn", DbType="Time NOT NULL")]
		public System.TimeSpan timeIn
		{
			get
			{
				return this._timeIn;
			}
			set
			{
				if ((this._timeIn != value))
				{
					this.OntimeInChanging(value);
					this.SendPropertyChanging();
					this._timeIn = value;
					this.SendPropertyChanged("timeIn");
					this.OntimeInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timeOut", DbType="Time")]
		public System.Nullable<System.TimeSpan> timeOut
		{
			get
			{
				return this._timeOut;
			}
			set
			{
				if ((this._timeOut != value))
				{
					this.OntimeOutChanging(value);
					this.SendPropertyChanging();
					this._timeOut = value;
					this.SendPropertyChanged("timeOut");
					this.OntimeOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="employee_employeesInOut", Storage="_employee", ThisKey="employeeID", OtherKey="employeeID", IsForeignKey=true)]
		public employee employee
		{
			get
			{
				return this._employee.Entity;
			}
			set
			{
				employee previousValue = this._employee.Entity;
				if (((previousValue != value) 
							|| (this._employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._employee.Entity = null;
						previousValue.employeesInOuts.Remove(this);
					}
					this._employee.Entity = value;
					if ((value != null))
					{
						value.employeesInOuts.Add(this);
						this._employeeID = value.employeeID;
					}
					else
					{
						this._employeeID = default(int);
					}
					this.SendPropertyChanged("employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.salarys")]
	public partial class salary : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _salaryID;
		
		private System.Nullable<int> _employeeID;
		
		private System.Nullable<System.DateTime> _monthNUM;
		
		private System.Nullable<int> _netSalary;
		
		private System.Nullable<int> _minuts;
		
		private System.Nullable<int> _bonuses;
		
		private System.Nullable<int> _discount;
		
		private System.Nullable<int> _totalSalary;
		
		private System.Nullable<bool> _transferred;
		
		private EntityRef<employee> _employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnsalaryIDChanging(int value);
    partial void OnsalaryIDChanged();
    partial void OnemployeeIDChanging(System.Nullable<int> value);
    partial void OnemployeeIDChanged();
    partial void OnmonthNUMChanging(System.Nullable<System.DateTime> value);
    partial void OnmonthNUMChanged();
    partial void OnnetSalaryChanging(System.Nullable<int> value);
    partial void OnnetSalaryChanged();
    partial void OnminutsChanging(System.Nullable<int> value);
    partial void OnminutsChanged();
    partial void OnbonusesChanging(System.Nullable<int> value);
    partial void OnbonusesChanged();
    partial void OndiscountChanging(System.Nullable<int> value);
    partial void OndiscountChanged();
    partial void OntotalSalaryChanging(System.Nullable<int> value);
    partial void OntotalSalaryChanged();
    partial void OntransferredChanging(System.Nullable<bool> value);
    partial void OntransferredChanged();
    #endregion
		
		public salary()
		{
			this._employee = default(EntityRef<employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_salaryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int salaryID
		{
			get
			{
				return this._salaryID;
			}
			set
			{
				if ((this._salaryID != value))
				{
					this.OnsalaryIDChanging(value);
					this.SendPropertyChanging();
					this._salaryID = value;
					this.SendPropertyChanged("salaryID");
					this.OnsalaryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employeeID", DbType="Int")]
		public System.Nullable<int> employeeID
		{
			get
			{
				return this._employeeID;
			}
			set
			{
				if ((this._employeeID != value))
				{
					if (this._employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnemployeeIDChanging(value);
					this.SendPropertyChanging();
					this._employeeID = value;
					this.SendPropertyChanged("employeeID");
					this.OnemployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_monthNUM", DbType="Date")]
		public System.Nullable<System.DateTime> monthNUM
		{
			get
			{
				return this._monthNUM;
			}
			set
			{
				if ((this._monthNUM != value))
				{
					this.OnmonthNUMChanging(value);
					this.SendPropertyChanging();
					this._monthNUM = value;
					this.SendPropertyChanged("monthNUM");
					this.OnmonthNUMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_netSalary", DbType="Int")]
		public System.Nullable<int> netSalary
		{
			get
			{
				return this._netSalary;
			}
			set
			{
				if ((this._netSalary != value))
				{
					this.OnnetSalaryChanging(value);
					this.SendPropertyChanging();
					this._netSalary = value;
					this.SendPropertyChanged("netSalary");
					this.OnnetSalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_minuts", DbType="Int")]
		public System.Nullable<int> minuts
		{
			get
			{
				return this._minuts;
			}
			set
			{
				if ((this._minuts != value))
				{
					this.OnminutsChanging(value);
					this.SendPropertyChanging();
					this._minuts = value;
					this.SendPropertyChanged("minuts");
					this.OnminutsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bonuses", DbType="Int")]
		public System.Nullable<int> bonuses
		{
			get
			{
				return this._bonuses;
			}
			set
			{
				if ((this._bonuses != value))
				{
					this.OnbonusesChanging(value);
					this.SendPropertyChanging();
					this._bonuses = value;
					this.SendPropertyChanged("bonuses");
					this.OnbonusesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_discount", DbType="Int")]
		public System.Nullable<int> discount
		{
			get
			{
				return this._discount;
			}
			set
			{
				if ((this._discount != value))
				{
					this.OndiscountChanging(value);
					this.SendPropertyChanging();
					this._discount = value;
					this.SendPropertyChanged("discount");
					this.OndiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalSalary", DbType="Int")]
		public System.Nullable<int> totalSalary
		{
			get
			{
				return this._totalSalary;
			}
			set
			{
				if ((this._totalSalary != value))
				{
					this.OntotalSalaryChanging(value);
					this.SendPropertyChanging();
					this._totalSalary = value;
					this.SendPropertyChanged("totalSalary");
					this.OntotalSalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transferred", DbType="Bit")]
		public System.Nullable<bool> transferred
		{
			get
			{
				return this._transferred;
			}
			set
			{
				if ((this._transferred != value))
				{
					this.OntransferredChanging(value);
					this.SendPropertyChanging();
					this._transferred = value;
					this.SendPropertyChanged("transferred");
					this.OntransferredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="employee_salary", Storage="_employee", ThisKey="employeeID", OtherKey="employeeID", IsForeignKey=true)]
		public employee employee
		{
			get
			{
				return this._employee.Entity;
			}
			set
			{
				employee previousValue = this._employee.Entity;
				if (((previousValue != value) 
							|| (this._employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._employee.Entity = null;
						previousValue.salaries.Remove(this);
					}
					this._employee.Entity = value;
					if ((value != null))
					{
						value.salaries.Add(this);
						this._employeeID = value.employeeID;
					}
					else
					{
						this._employeeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.getSavedSalary")]
	public partial class getSavedSalary
	{
		
		private int _salaryID;
		
		private System.Nullable<int> _netSalary;
		
		private System.Nullable<int> _minuts;
		
		private System.Nullable<int> _bonuses;
		
		private System.Nullable<int> _discount;
		
		private System.Nullable<int> _totalSalary;
		
		private System.Nullable<bool> _transferred;
		
		private string _accountName;
		
		private int _employeeID;
		
		private System.Nullable<int> _empSalary;
		
		private System.Nullable<System.DateTime> _monthNUM;
		
		public getSavedSalary()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_salaryID", DbType="Int NOT NULL")]
		public int salaryID
		{
			get
			{
				return this._salaryID;
			}
			set
			{
				if ((this._salaryID != value))
				{
					this._salaryID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_netSalary", DbType="Int")]
		public System.Nullable<int> netSalary
		{
			get
			{
				return this._netSalary;
			}
			set
			{
				if ((this._netSalary != value))
				{
					this._netSalary = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_minuts", DbType="Int")]
		public System.Nullable<int> minuts
		{
			get
			{
				return this._minuts;
			}
			set
			{
				if ((this._minuts != value))
				{
					this._minuts = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bonuses", DbType="Int")]
		public System.Nullable<int> bonuses
		{
			get
			{
				return this._bonuses;
			}
			set
			{
				if ((this._bonuses != value))
				{
					this._bonuses = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_discount", DbType="Int")]
		public System.Nullable<int> discount
		{
			get
			{
				return this._discount;
			}
			set
			{
				if ((this._discount != value))
				{
					this._discount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalSalary", DbType="Int")]
		public System.Nullable<int> totalSalary
		{
			get
			{
				return this._totalSalary;
			}
			set
			{
				if ((this._totalSalary != value))
				{
					this._totalSalary = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transferred", DbType="Bit")]
		public System.Nullable<bool> transferred
		{
			get
			{
				return this._transferred;
			}
			set
			{
				if ((this._transferred != value))
				{
					this._transferred = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accountName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string accountName
		{
			get
			{
				return this._accountName;
			}
			set
			{
				if ((this._accountName != value))
				{
					this._accountName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employeeID", DbType="Int NOT NULL")]
		public int employeeID
		{
			get
			{
				return this._employeeID;
			}
			set
			{
				if ((this._employeeID != value))
				{
					this._employeeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empSalary", DbType="Int")]
		public System.Nullable<int> empSalary
		{
			get
			{
				return this._empSalary;
			}
			set
			{
				if ((this._empSalary != value))
				{
					this._empSalary = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_monthNUM", DbType="Date")]
		public System.Nullable<System.DateTime> monthNUM
		{
			get
			{
				return this._monthNUM;
			}
			set
			{
				if ((this._monthNUM != value))
				{
					this._monthNUM = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.getSalary")]
	public partial class getSalary
	{
		
		private string _accountName;
		
		private int _EmpID;
		
		private System.DateTime _Date;
		
		private System.Nullable<int> _mi;
		
		private System.Nullable<int> _empSalary;
		
		public getSalary()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accountName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string accountName
		{
			get
			{
				return this._accountName;
			}
			set
			{
				if ((this._accountName != value))
				{
					this._accountName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpID", DbType="Int NOT NULL")]
		public int EmpID
		{
			get
			{
				return this._EmpID;
			}
			set
			{
				if ((this._EmpID != value))
				{
					this._EmpID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mi", DbType="Int")]
		public System.Nullable<int> mi
		{
			get
			{
				return this._mi;
			}
			set
			{
				if ((this._mi != value))
				{
					this._mi = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empSalary", DbType="Int")]
		public System.Nullable<int> empSalary
		{
			get
			{
				return this._empSalary;
			}
			set
			{
				if ((this._empSalary != value))
				{
					this._empSalary = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.accounts")]
	public partial class account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _accountID;
		
		private string _accountName;
		
		private System.Nullable<bool> _visible;
		
		private EntitySet<employee> _employees;
		
		private EntitySet<bill> _bills;
		
		private EntitySet<cashMoney> _cashMoneys;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnaccountIDChanging(int value);
    partial void OnaccountIDChanged();
    partial void OnaccountNameChanging(string value);
    partial void OnaccountNameChanged();
    partial void OnvisibleChanging(System.Nullable<bool> value);
    partial void OnvisibleChanged();
    #endregion
		
		public account()
		{
			this._employees = new EntitySet<employee>(new Action<employee>(this.attach_employees), new Action<employee>(this.detach_employees));
			this._bills = new EntitySet<bill>(new Action<bill>(this.attach_bills), new Action<bill>(this.detach_bills));
			this._cashMoneys = new EntitySet<cashMoney>(new Action<cashMoney>(this.attach_cashMoneys), new Action<cashMoney>(this.detach_cashMoneys));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accountID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int accountID
		{
			get
			{
				return this._accountID;
			}
			set
			{
				if ((this._accountID != value))
				{
					this.OnaccountIDChanging(value);
					this.SendPropertyChanging();
					this._accountID = value;
					this.SendPropertyChanged("accountID");
					this.OnaccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accountName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string accountName
		{
			get
			{
				return this._accountName;
			}
			set
			{
				if ((this._accountName != value))
				{
					this.OnaccountNameChanging(value);
					this.SendPropertyChanging();
					this._accountName = value;
					this.SendPropertyChanged("accountName");
					this.OnaccountNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_visible", DbType="Bit")]
		public System.Nullable<bool> visible
		{
			get
			{
				return this._visible;
			}
			set
			{
				if ((this._visible != value))
				{
					this.OnvisibleChanging(value);
					this.SendPropertyChanging();
					this._visible = value;
					this.SendPropertyChanged("visible");
					this.OnvisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="account_employee", Storage="_employees", ThisKey="accountID", OtherKey="accountID")]
		public EntitySet<employee> employees
		{
			get
			{
				return this._employees;
			}
			set
			{
				this._employees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="account_bill", Storage="_bills", ThisKey="accountID", OtherKey="clientID")]
		public EntitySet<bill> bills
		{
			get
			{
				return this._bills;
			}
			set
			{
				this._bills.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="account_cashMoney", Storage="_cashMoneys", ThisKey="accountID", OtherKey="accountID")]
		public EntitySet<cashMoney> cashMoneys
		{
			get
			{
				return this._cashMoneys;
			}
			set
			{
				this._cashMoneys.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_employees(employee entity)
		{
			this.SendPropertyChanging();
			entity.account = this;
		}
		
		private void detach_employees(employee entity)
		{
			this.SendPropertyChanging();
			entity.account = null;
		}
		
		private void attach_bills(bill entity)
		{
			this.SendPropertyChanging();
			entity.account = this;
		}
		
		private void detach_bills(bill entity)
		{
			this.SendPropertyChanging();
			entity.account = null;
		}
		
		private void attach_cashMoneys(cashMoney entity)
		{
			this.SendPropertyChanging();
			entity.account = this;
		}
		
		private void detach_cashMoneys(cashMoney entity)
		{
			this.SendPropertyChanging();
			entity.account = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.foodMaterial")]
	public partial class foodMaterial : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _foodID;
		
		private int _parentID;
		
		private string _arabicName;
		
		private string _englishName;
		
		private System.Nullable<int> _unitID;
		
		private System.Nullable<int> _price;
		
		private bool _isAParent;
		
		private System.Nullable<bool> _visible;
		
		private EntitySet<tempBillsDetail> _tempBillsDetails;
		
		private EntitySet<billDetail> _billDetails;
		
		private EntitySet<foodMaterialRelation> _foodMaterialRelations;
		
		private EntityRef<countingUnit> _countingUnit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnfoodIDChanging(int value);
    partial void OnfoodIDChanged();
    partial void OnparentIDChanging(int value);
    partial void OnparentIDChanged();
    partial void OnarabicNameChanging(string value);
    partial void OnarabicNameChanged();
    partial void OnenglishNameChanging(string value);
    partial void OnenglishNameChanged();
    partial void OnunitIDChanging(System.Nullable<int> value);
    partial void OnunitIDChanged();
    partial void OnpriceChanging(System.Nullable<int> value);
    partial void OnpriceChanged();
    partial void OnisAParentChanging(bool value);
    partial void OnisAParentChanged();
    partial void OnvisibleChanging(System.Nullable<bool> value);
    partial void OnvisibleChanged();
    #endregion
		
		public foodMaterial()
		{
			this._tempBillsDetails = new EntitySet<tempBillsDetail>(new Action<tempBillsDetail>(this.attach_tempBillsDetails), new Action<tempBillsDetail>(this.detach_tempBillsDetails));
			this._billDetails = new EntitySet<billDetail>(new Action<billDetail>(this.attach_billDetails), new Action<billDetail>(this.detach_billDetails));
			this._foodMaterialRelations = new EntitySet<foodMaterialRelation>(new Action<foodMaterialRelation>(this.attach_foodMaterialRelations), new Action<foodMaterialRelation>(this.detach_foodMaterialRelations));
			this._countingUnit = default(EntityRef<countingUnit>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_foodID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int foodID
		{
			get
			{
				return this._foodID;
			}
			set
			{
				if ((this._foodID != value))
				{
					this.OnfoodIDChanging(value);
					this.SendPropertyChanging();
					this._foodID = value;
					this.SendPropertyChanged("foodID");
					this.OnfoodIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parentID", DbType="Int NOT NULL")]
		public int parentID
		{
			get
			{
				return this._parentID;
			}
			set
			{
				if ((this._parentID != value))
				{
					this.OnparentIDChanging(value);
					this.SendPropertyChanging();
					this._parentID = value;
					this.SendPropertyChanged("parentID");
					this.OnparentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_arabicName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string arabicName
		{
			get
			{
				return this._arabicName;
			}
			set
			{
				if ((this._arabicName != value))
				{
					this.OnarabicNameChanging(value);
					this.SendPropertyChanging();
					this._arabicName = value;
					this.SendPropertyChanged("arabicName");
					this.OnarabicNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_englishName", DbType="NVarChar(50)")]
		public string englishName
		{
			get
			{
				return this._englishName;
			}
			set
			{
				if ((this._englishName != value))
				{
					this.OnenglishNameChanging(value);
					this.SendPropertyChanging();
					this._englishName = value;
					this.SendPropertyChanged("englishName");
					this.OnenglishNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_unitID", DbType="Int")]
		public System.Nullable<int> unitID
		{
			get
			{
				return this._unitID;
			}
			set
			{
				if ((this._unitID != value))
				{
					if (this._countingUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnunitIDChanging(value);
					this.SendPropertyChanging();
					this._unitID = value;
					this.SendPropertyChanged("unitID");
					this.OnunitIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Int")]
		public System.Nullable<int> price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isAParent", DbType="Bit NOT NULL")]
		public bool isAParent
		{
			get
			{
				return this._isAParent;
			}
			set
			{
				if ((this._isAParent != value))
				{
					this.OnisAParentChanging(value);
					this.SendPropertyChanging();
					this._isAParent = value;
					this.SendPropertyChanged("isAParent");
					this.OnisAParentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_visible", DbType="Bit")]
		public System.Nullable<bool> visible
		{
			get
			{
				return this._visible;
			}
			set
			{
				if ((this._visible != value))
				{
					this.OnvisibleChanging(value);
					this.SendPropertyChanging();
					this._visible = value;
					this.SendPropertyChanged("visible");
					this.OnvisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="foodMaterial_tempBillsDetail", Storage="_tempBillsDetails", ThisKey="foodID", OtherKey="foodID")]
		public EntitySet<tempBillsDetail> tempBillsDetails
		{
			get
			{
				return this._tempBillsDetails;
			}
			set
			{
				this._tempBillsDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="foodMaterial_billDetail", Storage="_billDetails", ThisKey="foodID", OtherKey="foodID")]
		public EntitySet<billDetail> billDetails
		{
			get
			{
				return this._billDetails;
			}
			set
			{
				this._billDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="foodMaterial_foodMaterialRelation", Storage="_foodMaterialRelations", ThisKey="foodID", OtherKey="foodMaterialID")]
		public EntitySet<foodMaterialRelation> foodMaterialRelations
		{
			get
			{
				return this._foodMaterialRelations;
			}
			set
			{
				this._foodMaterialRelations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="countingUnit_foodMaterial", Storage="_countingUnit", ThisKey="unitID", OtherKey="unitID", IsForeignKey=true)]
		public countingUnit countingUnit
		{
			get
			{
				return this._countingUnit.Entity;
			}
			set
			{
				countingUnit previousValue = this._countingUnit.Entity;
				if (((previousValue != value) 
							|| (this._countingUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._countingUnit.Entity = null;
						previousValue.foodMaterials.Remove(this);
					}
					this._countingUnit.Entity = value;
					if ((value != null))
					{
						value.foodMaterials.Add(this);
						this._unitID = value.unitID;
					}
					else
					{
						this._unitID = default(Nullable<int>);
					}
					this.SendPropertyChanged("countingUnit");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tempBillsDetails(tempBillsDetail entity)
		{
			this.SendPropertyChanging();
			entity.foodMaterial = this;
		}
		
		private void detach_tempBillsDetails(tempBillsDetail entity)
		{
			this.SendPropertyChanging();
			entity.foodMaterial = null;
		}
		
		private void attach_billDetails(billDetail entity)
		{
			this.SendPropertyChanging();
			entity.foodMaterial = this;
		}
		
		private void detach_billDetails(billDetail entity)
		{
			this.SendPropertyChanging();
			entity.foodMaterial = null;
		}
		
		private void attach_foodMaterialRelations(foodMaterialRelation entity)
		{
			this.SendPropertyChanging();
			entity.foodMaterial = this;
		}
		
		private void detach_foodMaterialRelations(foodMaterialRelation entity)
		{
			this.SendPropertyChanging();
			entity.foodMaterial = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.primaryMaterials")]
	public partial class primaryMaterial : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _materialID;
		
		private string _materialName;
		
		private int _countUnitID;
		
		private System.Nullable<int> _lastPrice;
		
		private System.Nullable<bool> _visible;
		
		private EntitySet<storeHouse> _storeHouses;
		
		private EntitySet<foodMaterialRelation> _foodMaterialRelations;
		
		private EntityRef<countingUnit> _countingUnit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaterialIDChanging(int value);
    partial void OnmaterialIDChanged();
    partial void OnmaterialNameChanging(string value);
    partial void OnmaterialNameChanged();
    partial void OncountUnitIDChanging(int value);
    partial void OncountUnitIDChanged();
    partial void OnlastPriceChanging(System.Nullable<int> value);
    partial void OnlastPriceChanged();
    partial void OnvisibleChanging(System.Nullable<bool> value);
    partial void OnvisibleChanged();
    #endregion
		
		public primaryMaterial()
		{
			this._storeHouses = new EntitySet<storeHouse>(new Action<storeHouse>(this.attach_storeHouses), new Action<storeHouse>(this.detach_storeHouses));
			this._foodMaterialRelations = new EntitySet<foodMaterialRelation>(new Action<foodMaterialRelation>(this.attach_foodMaterialRelations), new Action<foodMaterialRelation>(this.detach_foodMaterialRelations));
			this._countingUnit = default(EntityRef<countingUnit>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_materialID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int materialID
		{
			get
			{
				return this._materialID;
			}
			set
			{
				if ((this._materialID != value))
				{
					this.OnmaterialIDChanging(value);
					this.SendPropertyChanging();
					this._materialID = value;
					this.SendPropertyChanged("materialID");
					this.OnmaterialIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_materialName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string materialName
		{
			get
			{
				return this._materialName;
			}
			set
			{
				if ((this._materialName != value))
				{
					this.OnmaterialNameChanging(value);
					this.SendPropertyChanging();
					this._materialName = value;
					this.SendPropertyChanged("materialName");
					this.OnmaterialNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_countUnitID", DbType="Int NOT NULL")]
		public int countUnitID
		{
			get
			{
				return this._countUnitID;
			}
			set
			{
				if ((this._countUnitID != value))
				{
					if (this._countingUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncountUnitIDChanging(value);
					this.SendPropertyChanging();
					this._countUnitID = value;
					this.SendPropertyChanged("countUnitID");
					this.OncountUnitIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastPrice", DbType="Int")]
		public System.Nullable<int> lastPrice
		{
			get
			{
				return this._lastPrice;
			}
			set
			{
				if ((this._lastPrice != value))
				{
					this.OnlastPriceChanging(value);
					this.SendPropertyChanging();
					this._lastPrice = value;
					this.SendPropertyChanged("lastPrice");
					this.OnlastPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_visible", DbType="Bit")]
		public System.Nullable<bool> visible
		{
			get
			{
				return this._visible;
			}
			set
			{
				if ((this._visible != value))
				{
					this.OnvisibleChanging(value);
					this.SendPropertyChanging();
					this._visible = value;
					this.SendPropertyChanged("visible");
					this.OnvisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="primaryMaterial_storeHouse", Storage="_storeHouses", ThisKey="materialID", OtherKey="primaryMaterialID")]
		public EntitySet<storeHouse> storeHouses
		{
			get
			{
				return this._storeHouses;
			}
			set
			{
				this._storeHouses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="primaryMaterial_foodMaterialRelation", Storage="_foodMaterialRelations", ThisKey="materialID", OtherKey="primaryMaterialID")]
		public EntitySet<foodMaterialRelation> foodMaterialRelations
		{
			get
			{
				return this._foodMaterialRelations;
			}
			set
			{
				this._foodMaterialRelations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="countingUnit_primaryMaterial", Storage="_countingUnit", ThisKey="countUnitID", OtherKey="unitID", IsForeignKey=true)]
		public countingUnit countingUnit
		{
			get
			{
				return this._countingUnit.Entity;
			}
			set
			{
				countingUnit previousValue = this._countingUnit.Entity;
				if (((previousValue != value) 
							|| (this._countingUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._countingUnit.Entity = null;
						previousValue.primaryMaterials.Remove(this);
					}
					this._countingUnit.Entity = value;
					if ((value != null))
					{
						value.primaryMaterials.Add(this);
						this._countUnitID = value.unitID;
					}
					else
					{
						this._countUnitID = default(int);
					}
					this.SendPropertyChanged("countingUnit");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_storeHouses(storeHouse entity)
		{
			this.SendPropertyChanging();
			entity.primaryMaterial = this;
		}
		
		private void detach_storeHouses(storeHouse entity)
		{
			this.SendPropertyChanging();
			entity.primaryMaterial = null;
		}
		
		private void attach_foodMaterialRelations(foodMaterialRelation entity)
		{
			this.SendPropertyChanging();
			entity.primaryMaterial = this;
		}
		
		private void detach_foodMaterialRelations(foodMaterialRelation entity)
		{
			this.SendPropertyChanging();
			entity.primaryMaterial = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _userID;
		
		private string _username;
		
		private string _passwordMD5;
		
		private System.Nullable<int> _Permissions;
		
		private EntitySet<storeHouse> _storeHouses;
		
		private EntitySet<tempBill> _tempBills;
		
		private EntitySet<bill> _bills;
		
		private EntitySet<cashMoney> _cashMoneys;
		
		private EntityRef<Permission> _Permission;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnuserIDChanging(int value);
    partial void OnuserIDChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordMD5Changing(string value);
    partial void OnpasswordMD5Changed();
    partial void OnPermissionsChanging(System.Nullable<int> value);
    partial void OnPermissionsChanged();
    #endregion
		
		public User()
		{
			this._storeHouses = new EntitySet<storeHouse>(new Action<storeHouse>(this.attach_storeHouses), new Action<storeHouse>(this.detach_storeHouses));
			this._tempBills = new EntitySet<tempBill>(new Action<tempBill>(this.attach_tempBills), new Action<tempBill>(this.detach_tempBills));
			this._bills = new EntitySet<bill>(new Action<bill>(this.attach_bills), new Action<bill>(this.detach_bills));
			this._cashMoneys = new EntitySet<cashMoney>(new Action<cashMoney>(this.attach_cashMoneys), new Action<cashMoney>(this.detach_cashMoneys));
			this._Permission = default(EntityRef<Permission>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int userID
		{
			get
			{
				return this._userID;
			}
			set
			{
				if ((this._userID != value))
				{
					this.OnuserIDChanging(value);
					this.SendPropertyChanging();
					this._userID = value;
					this.SendPropertyChanged("userID");
					this.OnuserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_passwordMD5", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string passwordMD5
		{
			get
			{
				return this._passwordMD5;
			}
			set
			{
				if ((this._passwordMD5 != value))
				{
					this.OnpasswordMD5Changing(value);
					this.SendPropertyChanging();
					this._passwordMD5 = value;
					this.SendPropertyChanged("passwordMD5");
					this.OnpasswordMD5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Permissions", DbType="Int")]
		public System.Nullable<int> Permissions
		{
			get
			{
				return this._Permissions;
			}
			set
			{
				if ((this._Permissions != value))
				{
					if (this._Permission.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPermissionsChanging(value);
					this.SendPropertyChanging();
					this._Permissions = value;
					this.SendPropertyChanged("Permissions");
					this.OnPermissionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_storeHouse", Storage="_storeHouses", ThisKey="userID", OtherKey="userID")]
		public EntitySet<storeHouse> storeHouses
		{
			get
			{
				return this._storeHouses;
			}
			set
			{
				this._storeHouses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_tempBill", Storage="_tempBills", ThisKey="userID", OtherKey="userID")]
		public EntitySet<tempBill> tempBills
		{
			get
			{
				return this._tempBills;
			}
			set
			{
				this._tempBills.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_bill", Storage="_bills", ThisKey="userID", OtherKey="userID")]
		public EntitySet<bill> bills
		{
			get
			{
				return this._bills;
			}
			set
			{
				this._bills.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_cashMoney", Storage="_cashMoneys", ThisKey="userID", OtherKey="userID")]
		public EntitySet<cashMoney> cashMoneys
		{
			get
			{
				return this._cashMoneys;
			}
			set
			{
				this._cashMoneys.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Permission_User", Storage="_Permission", ThisKey="Permissions", OtherKey="permissionsID", IsForeignKey=true)]
		public Permission Permission
		{
			get
			{
				return this._Permission.Entity;
			}
			set
			{
				Permission previousValue = this._Permission.Entity;
				if (((previousValue != value) 
							|| (this._Permission.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Permission.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._Permission.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._Permissions = value.permissionsID;
					}
					else
					{
						this._Permissions = default(Nullable<int>);
					}
					this.SendPropertyChanged("Permission");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_storeHouses(storeHouse entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_storeHouses(storeHouse entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_tempBills(tempBill entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_tempBills(tempBill entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_bills(bill entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_bills(bill entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_cashMoneys(cashMoney entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_cashMoneys(cashMoney entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.getUsers")]
	public partial class getUser
	{
		
		private int _userID;
		
		private string _username;
		
		private int _permissionsID;
		
		private string _permissionName;
		
		public getUser()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userID", DbType="Int NOT NULL")]
		public int userID
		{
			get
			{
				return this._userID;
			}
			set
			{
				if ((this._userID != value))
				{
					this._userID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this._username = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_permissionsID", DbType="Int NOT NULL")]
		public int permissionsID
		{
			get
			{
				return this._permissionsID;
			}
			set
			{
				if ((this._permissionsID != value))
				{
					this._permissionsID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_permissionName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string permissionName
		{
			get
			{
				return this._permissionName;
			}
			set
			{
				if ((this._permissionName != value))
				{
					this._permissionName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Permissions")]
	public partial class Permission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _permissionsID;
		
		private string _permissionName;
		
		private bool _bills;
		
		private bool _oldBills;
		
		private bool _store;
		
		private bool _empSettings;
		
		private bool _empTineInOut;
		
		private bool _kitchen;
		
		private bool _foodRelations;
		
		private bool _salaries;
		
		private bool _settings;
		
		private bool _changePass;
		
		private System.Nullable<bool> _cashManager;
		
		private EntitySet<User> _Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpermissionsIDChanging(int value);
    partial void OnpermissionsIDChanged();
    partial void OnpermissionNameChanging(string value);
    partial void OnpermissionNameChanged();
    partial void OnbillsChanging(bool value);
    partial void OnbillsChanged();
    partial void OnoldBillsChanging(bool value);
    partial void OnoldBillsChanged();
    partial void OnstoreChanging(bool value);
    partial void OnstoreChanged();
    partial void OnempSettingsChanging(bool value);
    partial void OnempSettingsChanged();
    partial void OnempTineInOutChanging(bool value);
    partial void OnempTineInOutChanged();
    partial void OnkitchenChanging(bool value);
    partial void OnkitchenChanged();
    partial void OnfoodRelationsChanging(bool value);
    partial void OnfoodRelationsChanged();
    partial void OnsalariesChanging(bool value);
    partial void OnsalariesChanged();
    partial void OnsettingsChanging(bool value);
    partial void OnsettingsChanged();
    partial void OnchangePassChanging(bool value);
    partial void OnchangePassChanged();
    partial void OncashManagerChanging(System.Nullable<bool> value);
    partial void OncashManagerChanged();
    #endregion
		
		public Permission()
		{
			this._Users = new EntitySet<User>(new Action<User>(this.attach_Users), new Action<User>(this.detach_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_permissionsID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int permissionsID
		{
			get
			{
				return this._permissionsID;
			}
			set
			{
				if ((this._permissionsID != value))
				{
					this.OnpermissionsIDChanging(value);
					this.SendPropertyChanging();
					this._permissionsID = value;
					this.SendPropertyChanged("permissionsID");
					this.OnpermissionsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_permissionName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string permissionName
		{
			get
			{
				return this._permissionName;
			}
			set
			{
				if ((this._permissionName != value))
				{
					this.OnpermissionNameChanging(value);
					this.SendPropertyChanging();
					this._permissionName = value;
					this.SendPropertyChanged("permissionName");
					this.OnpermissionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bills", DbType="Bit NOT NULL")]
		public bool bills
		{
			get
			{
				return this._bills;
			}
			set
			{
				if ((this._bills != value))
				{
					this.OnbillsChanging(value);
					this.SendPropertyChanging();
					this._bills = value;
					this.SendPropertyChanged("bills");
					this.OnbillsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_oldBills", DbType="Bit NOT NULL")]
		public bool oldBills
		{
			get
			{
				return this._oldBills;
			}
			set
			{
				if ((this._oldBills != value))
				{
					this.OnoldBillsChanging(value);
					this.SendPropertyChanging();
					this._oldBills = value;
					this.SendPropertyChanged("oldBills");
					this.OnoldBillsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_store", DbType="Bit NOT NULL")]
		public bool store
		{
			get
			{
				return this._store;
			}
			set
			{
				if ((this._store != value))
				{
					this.OnstoreChanging(value);
					this.SendPropertyChanging();
					this._store = value;
					this.SendPropertyChanged("store");
					this.OnstoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empSettings", DbType="Bit NOT NULL")]
		public bool empSettings
		{
			get
			{
				return this._empSettings;
			}
			set
			{
				if ((this._empSettings != value))
				{
					this.OnempSettingsChanging(value);
					this.SendPropertyChanging();
					this._empSettings = value;
					this.SendPropertyChanged("empSettings");
					this.OnempSettingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empTineInOut", DbType="Bit NOT NULL")]
		public bool empTineInOut
		{
			get
			{
				return this._empTineInOut;
			}
			set
			{
				if ((this._empTineInOut != value))
				{
					this.OnempTineInOutChanging(value);
					this.SendPropertyChanging();
					this._empTineInOut = value;
					this.SendPropertyChanged("empTineInOut");
					this.OnempTineInOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kitchen", DbType="Bit NOT NULL")]
		public bool kitchen
		{
			get
			{
				return this._kitchen;
			}
			set
			{
				if ((this._kitchen != value))
				{
					this.OnkitchenChanging(value);
					this.SendPropertyChanging();
					this._kitchen = value;
					this.SendPropertyChanged("kitchen");
					this.OnkitchenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_foodRelations", DbType="Bit NOT NULL")]
		public bool foodRelations
		{
			get
			{
				return this._foodRelations;
			}
			set
			{
				if ((this._foodRelations != value))
				{
					this.OnfoodRelationsChanging(value);
					this.SendPropertyChanging();
					this._foodRelations = value;
					this.SendPropertyChanged("foodRelations");
					this.OnfoodRelationsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_salaries", DbType="Bit NOT NULL")]
		public bool salaries
		{
			get
			{
				return this._salaries;
			}
			set
			{
				if ((this._salaries != value))
				{
					this.OnsalariesChanging(value);
					this.SendPropertyChanging();
					this._salaries = value;
					this.SendPropertyChanged("salaries");
					this.OnsalariesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_settings", DbType="Bit NOT NULL")]
		public bool settings
		{
			get
			{
				return this._settings;
			}
			set
			{
				if ((this._settings != value))
				{
					this.OnsettingsChanging(value);
					this.SendPropertyChanging();
					this._settings = value;
					this.SendPropertyChanged("settings");
					this.OnsettingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_changePass", DbType="Bit NOT NULL")]
		public bool changePass
		{
			get
			{
				return this._changePass;
			}
			set
			{
				if ((this._changePass != value))
				{
					this.OnchangePassChanging(value);
					this.SendPropertyChanging();
					this._changePass = value;
					this.SendPropertyChanged("changePass");
					this.OnchangePassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cashManager", DbType="Bit")]
		public System.Nullable<bool> cashManager
		{
			get
			{
				return this._cashManager;
			}
			set
			{
				if ((this._cashManager != value))
				{
					this.OncashManagerChanging(value);
					this.SendPropertyChanging();
					this._cashManager = value;
					this.SendPropertyChanged("cashManager");
					this.OncashManagerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Permission_User", Storage="_Users", ThisKey="permissionsID", OtherKey="Permissions")]
		public EntitySet<User> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Permission = this;
		}
		
		private void detach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Permission = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.getPermissions")]
	public partial class getPermission
	{
		
		private int _userID;
		
		private bool _bills;
		
		private bool _oldBills;
		
		private bool _store;
		
		private bool _empSettings;
		
		private bool _empTineInOut;
		
		private bool _kitchen;
		
		private bool _foodRelations;
		
		private bool _salaries;
		
		private bool _settings;
		
		private bool _changePass;
		
		private System.Nullable<bool> _cashManager;
		
		public getPermission()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userID", DbType="Int NOT NULL")]
		public int userID
		{
			get
			{
				return this._userID;
			}
			set
			{
				if ((this._userID != value))
				{
					this._userID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bills", DbType="Bit NOT NULL")]
		public bool bills
		{
			get
			{
				return this._bills;
			}
			set
			{
				if ((this._bills != value))
				{
					this._bills = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_oldBills", DbType="Bit NOT NULL")]
		public bool oldBills
		{
			get
			{
				return this._oldBills;
			}
			set
			{
				if ((this._oldBills != value))
				{
					this._oldBills = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_store", DbType="Bit NOT NULL")]
		public bool store
		{
			get
			{
				return this._store;
			}
			set
			{
				if ((this._store != value))
				{
					this._store = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empSettings", DbType="Bit NOT NULL")]
		public bool empSettings
		{
			get
			{
				return this._empSettings;
			}
			set
			{
				if ((this._empSettings != value))
				{
					this._empSettings = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empTineInOut", DbType="Bit NOT NULL")]
		public bool empTineInOut
		{
			get
			{
				return this._empTineInOut;
			}
			set
			{
				if ((this._empTineInOut != value))
				{
					this._empTineInOut = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kitchen", DbType="Bit NOT NULL")]
		public bool kitchen
		{
			get
			{
				return this._kitchen;
			}
			set
			{
				if ((this._kitchen != value))
				{
					this._kitchen = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_foodRelations", DbType="Bit NOT NULL")]
		public bool foodRelations
		{
			get
			{
				return this._foodRelations;
			}
			set
			{
				if ((this._foodRelations != value))
				{
					this._foodRelations = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_salaries", DbType="Bit NOT NULL")]
		public bool salaries
		{
			get
			{
				return this._salaries;
			}
			set
			{
				if ((this._salaries != value))
				{
					this._salaries = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_settings", DbType="Bit NOT NULL")]
		public bool settings
		{
			get
			{
				return this._settings;
			}
			set
			{
				if ((this._settings != value))
				{
					this._settings = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_changePass", DbType="Bit NOT NULL")]
		public bool changePass
		{
			get
			{
				return this._changePass;
			}
			set
			{
				if ((this._changePass != value))
				{
					this._changePass = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cashManager", DbType="Bit")]
		public System.Nullable<bool> cashManager
		{
			get
			{
				return this._cashManager;
			}
			set
			{
				if ((this._cashManager != value))
				{
					this._cashManager = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.inventoryByBills")]
	public partial class inventoryByBill
	{
		
		private int _materialID;
		
		private string _materialName;
		
		private System.Nullable<decimal> _bills;
		
		private System.Nullable<int> _Pamount;
		
		private System.Nullable<int> _Namount;
		
		public inventoryByBill()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_materialID", DbType="Int NOT NULL")]
		public int materialID
		{
			get
			{
				return this._materialID;
			}
			set
			{
				if ((this._materialID != value))
				{
					this._materialID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_materialName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string materialName
		{
			get
			{
				return this._materialName;
			}
			set
			{
				if ((this._materialName != value))
				{
					this._materialName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bills", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> bills
		{
			get
			{
				return this._bills;
			}
			set
			{
				if ((this._bills != value))
				{
					this._bills = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pamount", DbType="Int")]
		public System.Nullable<int> Pamount
		{
			get
			{
				return this._Pamount;
			}
			set
			{
				if ((this._Pamount != value))
				{
					this._Pamount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Namount", DbType="Int")]
		public System.Nullable<int> Namount
		{
			get
			{
				return this._Namount;
			}
			set
			{
				if ((this._Namount != value))
				{
					this._Namount = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.getTableDetail_notMinus")]
	public partial class getTableDetail_notMinus
	{
		
		private int _tempBillID;
		
		private int _foodID;
		
		private System.Nullable<int> _amount;
		
		public getTableDetail_notMinus()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tempBillID", DbType="Int NOT NULL")]
		public int tempBillID
		{
			get
			{
				return this._tempBillID;
			}
			set
			{
				if ((this._tempBillID != value))
				{
					this._tempBillID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_foodID", DbType="Int NOT NULL")]
		public int foodID
		{
			get
			{
				return this._foodID;
			}
			set
			{
				if ((this._foodID != value))
				{
					this._foodID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount", DbType="Int")]
		public System.Nullable<int> amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this._amount = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.getBillToPrint")]
	public partial class getBillToPrint
	{
		
		private int _billID;
		
		private string _arabicName;
		
		private System.Nullable<int> _Amount;
		
		private System.Nullable<int> _Price;
		
		private System.Nullable<int> _SUM;
		
		public getBillToPrint()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_billID", DbType="Int NOT NULL")]
		public int billID
		{
			get
			{
				return this._billID;
			}
			set
			{
				if ((this._billID != value))
				{
					this._billID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_arabicName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string arabicName
		{
			get
			{
				return this._arabicName;
			}
			set
			{
				if ((this._arabicName != value))
				{
					this._arabicName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Int")]
		public System.Nullable<int> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Int")]
		public System.Nullable<int> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUM", DbType="Int")]
		public System.Nullable<int> SUM
		{
			get
			{
				return this._SUM;
			}
			set
			{
				if ((this._SUM != value))
				{
					this._SUM = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
